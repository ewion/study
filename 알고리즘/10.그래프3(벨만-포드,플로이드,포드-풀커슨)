 주요용어
벨만-포드 알고리즘(Bellman-Ford algorithm)
- 음의 가중치를 갖는 간선이 존재하는 그래프에 대해서도 단일 출발점 최단 경로를 구할 수 있는 방법
- 간선을 1개부터 최대 (|V|-1)개까지를 사용하는 최단 경로를 단계적으로 구하는 방법
플로이드 알고리즘(Floyd algorithm)
- 동적 프로그래밍 방법을 적용하여 모든 정점 쌍 간의 최단 경로를 한꺼번에 구하는 알고리즘
네트워크 플로 문제(network flow problem)
- 주어진 네트워크에 대해서 소스에서 싱크로 보낼 수 있는 플로 값을 최대로 하는 문제(“최대 플로 문제”)
포드-풀커슨 알고리즘(Ford-Fulkerson algorithm)
- 모든 간선의 플로를 0으로 둔 상태에서 시작해서 증가 경로가 더 이상 존재하지 않을 때까지 반복적으로 경로를 찾아서 최대 플로값을 구하는 방법
증가 경로(augmenting path)
- 소스에서 싱크까지 더 많은 플로를 보내기 위한 경로
커트(cut)
- 소스와 싱크가 각각 서로 다른 집합에 속하도록 정점의 집합을 2개의 집합으로 나누었을 때 두 집합을 연결하는 간선의 집합

내용
1. 벨만-포드 알고리즘
 개념
 - 단일 출발점 최단 경로를 구하는 알고리즘
 - 음의 가중치를 갖는 간선이 있어도 사용 가능
  음의 사이클이 없는 경우만 한함
 - G=(V,E)에서 |V|=n일 때 단계적으로 최단경로를 구해 나가는 방법
  간선을 1개 사용하는 최단 경로
  간선을 2개 사용하는 최단 경로
  ...
  간선을 (n-1)개 사용하는 최단 경로

 수행 과정
 - 데익스트라 알고리즘과 유사
 - 초기화
  출발점 s의 거리 d[s]=0, 나머지 모든 정점 v의 거리 d[v]=무한대
 - for i <- 1 to |V|-1

2. 플로이드 알고리즘 - 최단 경로
 개념
 - 모든 쌍간에 최단경로 알고리즘
 - 플로이드 와샬 알고리즘
 - 가정 -> 경로의 길이가 음인 사이클이 존재하지 않음
 - 동적 프로그래밍 방법 적용
 - 경유할 수 있는 정점의 범위가 1인 경로부터 시작해서 |V|인 경로까지 하나인 정점의 범위를 늘려 가면서 모든 정점 간 최단경로를 한꺼번에 구함
 - 인접행렬 표현 사용

 성능과 특징
 - 동적 프로그래밍 방법을 적용한 알고리즘
 - 데이크스트라 알고리즘으로 모든 쌍 최단 경로를 구할 수 있음

3. 포드 풀커슨 알고리즘 - 네트워크 플로 문제
 네트워크 플로 문제
 - 주어진 네트워크에 대해 플로를 최대로 하는 값을 찾는 문제
 - 네트워크 N=(V, E, s, t, c)
  방향 그래프 G=(V,E)
  s -> 소스 시작점, 진입차수가 0
  t -> 싱크 도착점, 진출차수가 0

 포드 풀커슨 알고리즘
 - 최초로 제시된 가장 기초적인 해결 방법
 - 모든 간선의 플로를 0에서 둔 상태에서 시작해서 증가 경로가 더이상 존재하지 않을때까지 반복적으로 경로를 찾아 최대 플로 값을 구하는 방법
 - 증가 경로
  소스에서 싱크까지 더 많은 플로를 보낼 수 있는 경로
  경로상 간선은 네트워크 N간 간선방향과 일치하지 않을 수 있음

 증가 경로
 - 소스에서 싱크까지 더 많은 플로를 보낼 수 있는 경로
 - 경로상 간선은 네트워크 N의 간선 방향과 일치하지 않을 수 있음

 잔여 용량
 - 간선 <u,v>에서 추가로 플로를 증가시킬수 있는 여유 용량

 성능과 특징
 - 증가 경로의 선택은 DFS 또는 BFS적용
 - 컷 cut
  S의 정점에서 T의 정점으로 향하는 간선의 집합