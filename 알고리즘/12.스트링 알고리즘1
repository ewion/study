알파벳 (alphabet)
스트링에 사용되는 문자들의 집합으로, 일반적으로 ∑로 나타냄
스트링 매칭 (string matching)
텍스트에서 패턴이 나타나는 위치를 찾는 문제
브루트-포스 (brute-force) 스트링 매칭 알고리즘
텍스트의 각 위치에서부터 패턴의 길이만큼 문자를 비교하며 매치를 찾는 방법
라빈-카프 (Rabin-Karp) 알고리즘
패턴의 해시값으로 매치의 후보를 찾고, 후보에 대해서만 문자별로 비교해서 매치를 찾는 방법
KMP (Knuth-Morris-Pratt) 알고리즘
패턴 내의 문자들의 관계를 이용하여 매칭 시 중복된 비교를 줄이며 패턴을 찾는 방법으로, 패턴의 앞부분부터 문자를 비교

내용
1. 기본 개념
 스트링
 - 문자가 연속적으로 나열된 문자열

 알파벳
 - 시그마 기호로 표현
 - 스트링에 사용되는 문자들의 집합

 스트링 알고리즘
 - 스트링에 대한 다양한 문제를 해결하는 알고리즘들을 통칭
 - 종류
  스트링 매칭
  스트링 압축
  최장 공통 부분 수열
  최장 반복 서브스트링
  최장 회문 서브스트링

 스트링 매칭
 - 텍스트에서 패턴이 나타나는 위치를 찾는 것

 브루트-포스 스트링 매칭 알고리즘
 - 또는 나이브 알고리즘
 - 원시적이고 기초적임
 - 텍스트의 각 위치에서부터 패턴의 길이만큼 문자를 비교하며 매치하는 방법
 - 시간 복잡도 -> O(nm)

 스트링 매칭 알고리즘
 - 패턴을 전처리
  라빈 카프
  KMP
  보이어
 - 텍스트를 전처리
  접미부 트리
  접미부 배열

2. 라빈-카프 알고리즘
 개념
 - 패턴의 해시값으로 매치의 후보를 찾고 후보에 대해서만 문자열로 비교해서 매치를 찾는 방법

 성능과 특징
 - 시간복잡도 -> O(n+km)
  전처리 -> O(m)
  텍스트에서 해시값 계산 -> O(n)
  후보 위치는 문자 직접 비교, 매치 개수 k -> O(km)
 - 매치 개수가 상수 -> O(n)
 - 모든 위치에서 매치(최악의 경우) -> O(nm)

3. KMP 알고리즘
 개념
 - Knuth-Morris-Pratt 가 제안
 - 패턴 내 문자들의 관계를 이용하여 매칭 시 중복된 비교를 줄임
 - 텍스트 첫 위치에서 패턴의 앞 부분부터 문자 비교
 - 일치한 서브스트링에 대한 접두부와 접미부의 최대 일치 정보

 성능과 특징
 - 전처리 -> O(m)
 - 매칭 -> O(n)