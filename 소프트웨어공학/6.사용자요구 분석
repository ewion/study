1. 요구사항
 개념
 - 문제해결이나 목적달성을 위해 사용자가 필요로 하는 조건이나 능력
 - 요구분석과 명세 단계는 요구사항을 찾아 분석하고 문서화 하는 과정, 요구공학이라고도 함

 요구사항 명세서
 - 시스템이 제공해야 하는 서비스나 제약조건에 대해 기술한 문서
 - 개발 유지보수 작업의 기초가 되는 문서
 - 고객과 개발자 사이의 의사소통 수단으로 계약서임

 요구사항의 종류
 - 기능적 요구사항
  시스템이 제공해야 하는 기능에 관한 요구사항
  입출력 양식 저장구조 계산능력 같은 기능적 요인 정의
 - 비기능적 요구사항
  품질 서비스나 기능상 제약, 법률상의 준수 및 표준의 준수
  사용성 효울성 성능 저장 용량 입출력장치 서능 보안 신뢰성등 관련한 요구사항 등과 프로세스 관련 요구사항 및 하드웨어에 관한 것

 FURPS+
 - HP에서 개발한 요구사항 분류 모델
 - Functionality 기능적 요구사항
 - U R P S와 +는 비기능적 요구사항
 - 일반적으로 비기능적 요구사항이 기능적 요구사항보다 중요, 비기능적 요구사항이 만족되지 않으면 시스템을 사용하지 않음
 - FURPS
  기능성, 사용성, 신뢰성, 성능, 지원성
 - +
  설계, 구현, 인터페이스, 물리적 제약사항 등

2. 요구공학 프로세스
 요구공학 프로세스
 - 시스템의 목표와 기능 및 제약사항을 결정하는 과정
 - 반복적이고 협력적인 프로세스를 강조하고 결과의 문서화와 변화하는 요구사항에 대한 이해를 강조한 용어
 - 입력은 고객이 준비한 문제 기술서, 출력은 요구사항 명세서(SRS)

 문제 기술서 -> 타당성 조사 -> 요구사항 수집분석 -> 요구사항 문서화 -> 요구사항 검토 -> 요구사항 관리 -> SRS
                                                           -> 사용자, 시스템 요구사항       ->
 타당성 조사
 - 시스템이 기관에 목적에 부합하는지 여부
 - 현재의 기술과 비용으로 일정에 맞춰 개발할수 있는 지 여부
 - 다른 시스템과의 통합 여부

 요구사항 수집과 분석
 - 고객이나 사용자와 의사소통하여 시스템이 제공해야 하는 서비스, 요구되는 시스템의 성능 및 제약사항을 찾아내는 것
 - 전담 분석가가 도메인에 대한 지식을 갖고 있어야함
 - 다양한 사람과 관련되있음, 시스템에 관심을 갖고있으며 시스템에 직간접적으로 영향을 받는 사람을 이해관계자라 함

 요구사항 분석
 - 요구사항 추출후의 작업
 - 요구사항 분류 -> 요구사항 간 충돌 해결 -> 우선순위 부여

 요구사항 추출과 분석의 어려운점
 - 정확히 표현X
 - 비현실적인 요구
 - 각자의 환경에 맞는 표현 사용
 - 다양한 관점에서 서로 다른 요구
 - 환경이 바뀌면 요구사항 분석 중 요구사항이 변경될 수 있음

 JAD (Joint Application Design)
 - 애플리케이션의 설계 개발 과정에서 고객과 사용자를 참여시키는 것
 - 모든 관련자들이 참여하는 워크숍에서 요구사항 추출
 - 3~5일정도 회의 진행
 - 최종 JAD문서는 합의된 요구사항 명세서임
 - JAD 절차
  조사 단계 -> 준비 단계 -> 회의 -> 최종 문서 작업
 - JAD 고려 절차
  협력작업을 통해 참석자들 간 의사소통 증진, 빠른 합의 도출
  개발자는 사용자, 사용자는 개발자의 문제를 이해하게 됨
  진행자의 역량 중요

 요구사항 문서화
 - 사용자 요구사항
  고객이나 사용자를 위해 작성
  전문용어 사용 금지
  고수준의 추상적 요구사항
  제안 요청서의 형태가 이러함0
 - 시스템 요구사항
  개발자를 대상으로 작성됨
  서비스와 제약조건이 자세히 기술
  설계와 개발 작업의 기초가 되며 계약서 역할
  시스템 모델을 사용하여 구현

 요구사항 검토
 - 개발팀이 요구사항의 의미를 설명
 - 고객 개발자 사용지등이 오류가 있는지 시스템 요구사항을 검토하는 것
 - 요구사항 명세서는 계약서의 기능을 하므로 고객과 개발자는 모두 상세히 검토

 좋은 요구사항이 갖추어야 할 특성
 - 완전성
 - 일관성
 - 명확성
 - 정확성
 - 실현성
 - 검증가능성
 - 이해성
 - 추적성
 - 적응성

 요구사항 관리
 - 요구사항의 변화를 이해, 통제하는 프로세스
 - 요구사항을 조직화 문서화, 요구사항 변경 관리
 - 초기 요구사항은 불완전하고 불일치하므로 요구사항은 변경, 진화함
 - 환경변화, 시스템 이해도 상승, 새로운 요구등으로 요구사항이 변경
 - 요구사항이 변경될 때 영향을 받는 모든 정보를 추적하여 수정해주어야 함

 추적성 정보
 - 요구사항의 변경을 관리하기 위한 정보
 - 요구사항들 간에 그리고 요구사항, 시스템 서계, 코드 사이에는 다양한 의존 관계가 존재
 - 요구사항이 변경될 경우, 그 것에 영향을 받는 관련 요구사항(또는 설계요소) 파악할수 있어야 함
 - 추적성 정보 활용
  모든 요구사항을 개발했는 지 확인
  테스터는 시스템이 요구사항과 일치하는지 알수있음
  유지보수자는 변경의 파급효과를 평가 가능
 - 추적성 정보 유형
  소스 추적성 : 요구사항들을 그것의 제안자 및 제안이유와 연결
  요구사항 추적성 : 특정 요구사항과 관련 있는 다른요구사항에 관한 정보를 유지하는것
  설계 추적성 : 요구사항과 관련된 설계문서 파악, 유지

3. 요구사항 모델링
 개념
 - 시스템을 명확이 이해하거나 명세화하기 위해 모델 사용
 - 자연언어를 이용한 명세의 문제점
 - 상세한 시스템 요구사항의 명세화작업을 위해 수학적 명세, 다이어그램 테이블 구조화된 언어 설계기술 언어 사용

 시스템 모델
 - 시스템 모델을 이용하여 표현하는것이 가장 일반적
 - 그래픽을 사용해 표현
 - 다양한 관점에서 시스템 모습 표현
 - 정확한 기술 방법으로 표현하므로 검증가능
 - 그림은 자연언어보다 이해하기 쉬움
 - 분석설계과정의 다리
 - ex) 목업

 객체지향 분석
 - 요구사항 분석 작업에 객체지향 방법을 적용하는 것
  객체를 찾고 객체관의 관계를 바탕으로 요구사항을 구조화하고 정형화하여 시스템 모델을 만드는 일
  요구사항의 정형화 과정으로 어려운 일
  도메인 지식, 기술적 지식의 부족 및 의견불일치로 인해 미뤄지는 경향이 있음
 - 분석 모델
  객체지향 분석의 결과물로 시스템을 사용자 관점에서 표현
  기능 모델(유스케이스, 시나리오)은 분석과정의 입력물이자 결과물
  결과물은 분석객체모델(클래스다이어그램)과 동적모델(상태 다이어그램,시퀀스 다이어그램)

 구조적 분석
 - 시스템 요구사항을 정의하기 위해 분할정복, 하향식기능분해방법을 사용한 요구사항 분석 방법
  결과를 그래픽 표현에 기초한 시스템모델로 표현
  시스템모델을 사용하여 분석가와 사용자가 의사소통
  기능적 분해에 의해 시스템을 다루기 쉬운 조각들로 나눔
 - 구조적 분석에 사용된 소프트웨어공학 원리
  추상화 : 복잡한 사물로부터 핵심적인 기능만 추출
  형식화 : 엄격한 접근방법을 사용하고 단계별로 결과물 문서화
  분할과 정복 : 큰 문제를 작고 독립적인 문제들로 나누어 푸는 것
  계층화 : 분할된 모듈을 트리구조로 구성
 - 구조적 분석에서 사용되는 모델
  배경도, 데이터흐름도, 개체 관계도
  데이터 사전, 프로세스 명세서, 상태전이도
 - 구조적 설계에서 사용하는 모델
  구조도, 모듈명세서, 데이터사전

 DFD (data flow diagram)
 - 구조적 분석에서 사용되는 기능 관점의 시스템모델
 - 시스템에서 데이터 흐름과 변환을 보여주는 네트워크 형태의 다이어그램
 - 입력 데이터에 대해 어떤계산을 통해 결과가 나오는지에 관한 단계적 처리를 보여줌
 - 정보처리시스템의 기능을 명세할 때 널리 사용
 - 데이터저장소에 저장되거나 프로세스 사이에서 전달되는 데이터는 데이터사전에 정의

 구조적 분석과 객체지향 분석 비교
 - 구조적 분석은 기능관점에서 시스템을 표현
 - 객체지향 분석은 기능과 데이터를 함께 캡슐화한 객체를 가지고 시스템을 표현
 - 구조적 분석은 기능 분해 도는 합성에 의한 표현방법을 사용하며 객체지향 분석은 상속 개념도 사용할 수 있음