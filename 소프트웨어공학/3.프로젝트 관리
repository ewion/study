1. 개요
 필요성
 - 예산, 일정의 제약으로 관리가 필요
 - 프로젝트를 계획, 감독하는 일
  계획 수립
  고객의 요구, 표준 준수 확인
  시간과 예산에 맞추어 개발되는지 사람과 프로세스 제어
 - 소프트웨어 프로젝트 관리가 어려운 점
  문서에 의존
  소프르웨어 개발 프로세스의 명확한 표준이 없음
  기술 발전 속도가 빨라 이전 프로젝트 경험을 살리기 힘듬

 프로젝트 관리자의 업무
 - 프로젝트 착수
  제안서 작성
 - 프로젝트 계획
  일정, 비용 ,자원, 위험 계획
 - 프로젝트 실행
  계획에 기초한 프로젝트 감시화 통제
 - 프로젝트 종료
  보고서 작성, 평가

 프로젝트 계획
 - 어떤 일을, 어느정도의 비용, 누구에 의해, 언제까지 하는가를 결정하는 일
 - 계획에 기초하여 산출물과 개발 절차 관리
 - 브룩스의 법칙
  가장 흔한 프로젝트 실패는 일정 지연
 - 적은 인력, 일정은 여유롭게가 좋음

 프로젝트 계획의 구성
 - 개요
 - 개발 절차 계획
 - 인원, 예산 및 일정 계획
 - 문서화 계획
 - 하드웨어와 소프트웨어 자원 계획
 - 위험 관리 계획

2. 일정 계획
 일정 계획과 작업
 - 작업 분할, 작업들 간 관계, 인적/물적 자원의 배정 등을 계획
 - 작업 분할
  요구명세서에 기초하여 전체 작업을 관리 가능하고 측정 가능한 소작업들로 분할
  작업 분해 구조 WBS
 - 작업 명세화
  소작업에 대해 일의 양, 필요 산출물, 필요 자원등을 결정
  작업의 양은 인원-월(PM)으로 표시, 1PM은 중급 수준 개발자의 1달 작업량
 - 작업 진행 순서 정의
  작업의 선후관계 분석하여 순서 배정
  PERT/CPM
 - 인력 배정
 - 작업비용 산정
 - 개발일정 수립
  작업별로 시작지점과 종료시점 설정
  CPM으로 분석하고 Gantt 차트로 도표화

 WBS 작업 분할 구조
 - 프로젝트 수행을 위해 개발 업무를 분할하여 계층 구조로 표현
 - 최하위 수준의 작업을 작업 패키지 라고 함
 - 프로젝트 계획과 관리를 위한 기초자료

 PERT
 - 작업의 선후관계를 표현한 사이클이 없는 방향 그래프

 CPM 임계 경로 방법
 - 일정 계획을 위한 알고리즘적 분석 방법
 - 임계 경로는 시작에서 종료 작업까지의 경로 중 가장 긴 경로
 - 임계 경로상의 작업들은 프로젝트의 일정 준수를 위해 지연이 허용되지 않는 작업
 - 임계 경로상에 있지 않은 작업들은 여유 시간을 가짐

 간트 차트
 - 막대모양으로 프로젝트 작업들의 순차 도는 병행순서를 보여주는 차트
  상던에 시간축 표시, 작업별로 막대를 가로방향으로 표시
  막대는 작업 시간에 맞추어지며 길이는 소요시간
 - 일정 조정, 인력 배정 계획에 사용
  작업별로 진척 비율이나 인력 배정 표시 가능

3. 규모 산정
 프로젝트 산정
 - 규모 추정 -> 개발 노력(비용)추정, 일정 계획
 - 규모 산정의 정확성이 다른 부분에 영항을 줌
  고객 요구사항과 시스템 명세서를 참고
  라인수를 추정
  기능 점수 방법
 - 노력 추정에 과거 데이터와 프로젝트의 특성을 고려
 - 일정 계획에는 투입되는 인력 고려
 - 추정의 정확성은 과거 프로젝트 데이터의 정확성, 제공되는 , 개발 조직에서 프로세스의 성숙도에 좌우됨

 기능 점수
 - 기능의 규모를 측정하기 위한 단위
  소프트웨어의 기능을 다섯가지 유형으로 분류하여 계산
 - 프로그램의 기능에 초점을 맞춘 논리적 규모 척도
  기능적 사용자 요구사항을 양으로 표시
 - 구현 기술이나 구현 언어와 무관
 - 사무 정보 시스템의 규모 산정에 적합
 - 보정 기능 점수(AFP)는 미보정 기능 점수(UFP)와 보정 계수를 곱함
 - 미보정 기능 점수 (UFP)
  프로그램에서 표현, 사용되는 데이터의 총량을 계량회
  데이터 기능과 트렌젝션 기능의 개수를 측정
  각각의 복잡도에 따른 가중치를 곱하여 합산
 - 보정 기능 점수 (AFP)
  AFP = UFP * VAF,
  여기서 VAF = 0.65 * 0.01 * TDI
  TDI 는 총 영향도
  VAF는 보정 계수이며(0.65~1.35)
  TDI는 기술적 복잡도를 반영하기 위해 14개 항목의 영향도(0~5점)를 모두 합한 것(총 0~70점)

 기능 점수 고찰
 - 프로그램 언어별로 LOC/FP 즉 기능 점수 1점을 구현하기 위한 필요한 라인 수존재
 - 기능 점수로부터 라인 수 계산 가능
 - 초기 단계에서 라인 수 추정에 효과적
 - 프로그램의 평균 생산성(FP/PM)을 안다면 전체 PM을 계산할 수 있음
 - 사무정보시스템의 규모 산정에 적합


 기능점수에 기초한 개발비 산정 사례
 - 총 개발 비용 (보정후 개발원가 + 이윤 + 경비)
 - 보정후 개발원가는 (기능점수 * 기능점수당 단가) * 보정계수
 - 사례

4. 개발 비용 산정

 비용 산정 방법의 분류
 - 판단에 의한 방법
  전문가 판단, 델파이, 작업 분해
 - 수학적 모델 이용
  알고리즘 모델, 유추

 COCOMO
 - 가장 잘 알려진 소프트웨어 비용 산정 모델
 - 프로젝트 유형을 3가지로 구분, 기본/중간/내장
 - 분석 정도에 따른 3가지 모델 제시 기본/중급/상세
 - 효과적 산정을 위해 우선 규모 추정 필요
 - 기본 코코모는 라인 수 만으로 비용 추정
 - 라인 수 LOC
  간단하며 산정 방법과의 연결이 용이하며 직관적
  계획단계에서 산정하기 어렵고 프로그래밍 언어에 따라 다름
  과거 경험, 전문가 판단, 구성 요소별 산출 후 합산
 - 프로젝트 유형(기본 COCOMO)
  기본 : 소규모 프로젝트, 경험있는 개발자, 까다롭지 않은 요구사항
  중간 : 중규모, 중간정도의 경험, 요구사항 혼재
  내장 : 대규모 프로젝트, 제한된 하드웨어, 엄격한 운영조건
 - 중급 코코모
  15개의 비용 승수를 곱하여 노력 보정 계수(EAF)를 계산
  각 비용 승수는 6개의 등급으로 나뉨
  총 노력을 계산할 때 EAF를 곱함

 소프트웨어 수정을 위한 노력
 - 설계, 코드, 통합과 테스트 부분에서 수정이 필요한 비율을 구하여 수정 보정 계수를 계싼
 - AAF = 0.4*(설계 수정 비율)+0.3*(코드 수정 비율)+0.3*(통합과 테스트 수정 비율)
  전체에서 수정이 요구되는 비율을 의미
 - 상응 LOC = 기존 LOC * AAF

5. 팀 구성 방식
 매트릭스 조직
 - 프로젝트 조직과 기능별 조직의 장점을 조합
 - 개발자가 전문 기능 부서에 속하되, 일정 기간동안 프로젝트에 소속되는 형태
 - 팀 구성원들 간에 정보와 경험을 공유할 수 있으나 기능 부서장과 프로젝트 관리자 양쪽의 간섭을 받음

 의사결정 방법에 따른 팀 구성
 - 비이기적인 팀
  분산형 팀 구성 방식
  구성원 전체가 의사결정 참여
  작업만족도 높음
  의사결정이 높고 책임소재 모호
 - 책임 프로그래머 팀
  중앙집중형 팀 구성 방식
  책임 프로그래머가 중요한 판단과 관리결정
  책임 프로그래머의 능력에 프로젝트가 좌우
  소규모 프로젝트에 적합
 - 계층형
  중앙집중형과 분산형 팀 구성 방법을 혼합

6. 위험 분석과 관리
 위험
 - 위험은 불확실성으로 인해 잠재해 있는 문제
  불분명 요구사항, 요구사항 변경, 추정의 어려움 등 불확실성 존재
  위험 발생시 프로젝트 품질에 심각한 영향
 - 위험 관리
  위험요인을 예측하고 발생가능성, 영향력을 분석하여 대책수립

 위험의 분류 (어디에 위험을 주는가)
 - 제품 위험
  품질이나 성능에 영향
  불안정 요구사항 성능이 낮은 도구
 - 조직 위험
  조직에 비즈니스에 영향
  경쟁사 제품 출시, 기술 변화 ,환경 변화
 - 프로젝트 위험
  일정이나 자원 활용에 영향
  미흡한 조직의 지원, 중요 직원의 이탈

 위험 관리 프로세스
 - 위험 식별
 - 위험 분석
  가능성과 결과의 심각성 평가
  우선순위를 정하여 대책이필요한 위험 요인 정리
 - 위험 계획
  회피
  최소화
  긴급 대책
 - 제어와 모니터링