1. 개요
 정의
 - 프로그램과 관련 데이터의 묶음
 - 포괄적 의미의 소프트웨어는 관련 문서들을 포함한 개념

 분류
 - 시스템 소프트웨어 : 컴퓨터 동작을 위한 목적의 소프트웨어
  응용체제 장비드라이버
  컴파일러 DBMS
  유틸리티 프로그램
 - 응용 소프트웨어 : 사용자의 업무를 지원하는 소프트웨어
  웹브라우저
  사무용 SW, 게임
  MIS ERP

 성질
 - 무형의 인공물, 물질적인 성질이 없음
 - 컴포넌트의 조립으로 만들기 어려움
 - 상대적으로 설계과정과 품질보증이 필요
 - 개발비용의 대부분은 인건비
 - 상대적으로 변경 용이
 - 소프트웨어는 마모되지 않음
  환경이 변화되거나 품질이 저하될 뿐
  소프트웨어 유지보수 작업은 설계의 변경을 요구함

 응용 분야
 - 시스템
 - 실시간
 - 내장형
 - 비즈니스
 - 개인용
 - 인공지능
 - 웹 기반
 - 공학/과학용

2. 정의
 소프트웨어 위기 현상의 사례
 - 개발일정 지연
 - 초과비용 발생
 - 제품 신뢰도 결여
 - 명세 요구 결격
 - 유지보수의 어려움

 고려 사항
 - 단순한 코드의 생성이 아님
 - 개발 프로세스와 프로젝트 관리가 중요
 - 비용절감, 품질향상 추구
  문서화, 프로젝트 관리 중요
  초기 요구사항 명세화 작업에 노력 기울여야함

 공학 환경
 - 소프트웨어 공학의 대상은 중규모 이상의 복잡하고 중요한소프트웨어 개발
 - 다양한 해결 방법들을 통합적으로 다루어야 함
 - 환경의 구성

  계층적 표현

 소프트웨어의
 - 정확성
  사용자의 요구를 만족시키는 능력
  결함이 있어도 신뢰도에 문제가 되지 않을 수 있음
 - 성능
  지정된 시간 안에 컴퓨터 시스템이 처리할 수 있는 작업량
  주어진 조건하에서 주어진 기능을 빠르게 제공하는 능력
 - 사용성
  본래 목적에 맞게 효율성있게 사용할 수 있는가
 - 상호 운영성
  다른 시스템과 공존하며 협력가능한 능력
 - 유지보수성
  소프트웨어 변경이 용이한 정도
  요인 : 새로운 기능 추가, 기존 기능 개선, 환경변화, 오류 발생
 - 이식성
  다른 환경에서 동작할수 있는 능력
 - 검사성
  좋은 소프트웨어인지 검사 가능한지 여부
 - 추적성
  이해관계자, 요구사항, 설계문서, 소스코드 간의 관계 추적이 가능한지 여부