강의개요
웹 페이지를 만들기 위해서는 HTML로 웹 페이지의 내용을 작성하고, CSS를 사용해서 웹 페이지의 외양을 지정하며, 자바스크립트를 통해서 웹 페이지의 동작을 프로그래밍한다. 이번 강의에서는 자바스크립트의 이해와 사용에 필요한 기초적인 내용을 중심으로 학습한다. 우선 자바스크립트의 기본적인 구문과 문법을 살펴보고, 객체, 메서드, 이벤트 등의 개념과 이를 활용한 프로그래밍 방법에 대해서 학습한다.

학습목표
자바스크립트의 개념과 필요성을 이해할 수 있다.
자바스크립트의 기본 구문을 이해하고 프로그래밍할 수 있다.
객체와 관련된 개념을 이해하고, 내장 객체의 다양한 메서드와 속성을 활용하여 프로그래밍할 수 있다.
이벤트 개념을 이해하고, 이를 활용하여 프로그래밍할 수 있다.

정리하기
자바스크립트 개요

자바스크립트 → 클라이언트 측에서 독립적으로 실행되는 프로그램을 작성하기 위한 HTML5 공식 스크립트 언어 → HTML 문서 내에 삽입되어 브라우저에 의해 실행되는 언어
선언 방식(HTML 문서에 적용하는 방식) → ① 문서의 script 요소 내에 코드를 위치시키는 방식, ② 코드를 별도의 외부 파일로 만들어 놓고 불러와서 사용하는 방식, ③ HTML 요소에서 이벤트 속성의 값으로 코드를 직접 삽입하는 방식
주석 → 한 줄 주석(‘// 주석 내용’), 여러 줄 주석(‘/* 주석 내용 */’)
변수, 연산자, 문장, 함수

변수 선언
- 명시적 선언은 요구되지 않음 → 값을 대입하는 순간 자료형이 결정됨
- 명시적 선언의 경우 → ‘let 변수명’ → 변수명은 식별자 지정 규칙을 따름
상수 선언 → ‘const 상수명 값’
자료형 → 정수(10진수, 8진수: 0으로 시작, 16진수: 0x 또는 0X로 시작), 실수, 문자열, 논리형, null형
연산자 종류 → 산술(+,-,*,/,%), 대입(=,+=,-+,*=,/=,%=), 증감(++,--), 비교(==,!=,<,<=,>,>=), 논리(!,&&,||), 조건(?:), 연결(+), 거듭제곱(**), 비트(~,&,^,|), 시프트(<<,>>,>>>)
조건문(선택문) → 조건식의 결과에 따라 여러 실행 경로 중에서 하나의 경로를 선택 → if문, if-else문(다중 if-else문), switch문
반복문 → 일련의 문장을 여러 번 반복적으로 수행 → 반복 횟수 제어 루프(for문), 논리 제어 루프(while문, do while문)
보조 제어문 → continue문, break문
함수 → 프로그램에서 논리적으로 연관된 일련의 식/문장 등을 하나의 단위로 묶어 놓은 것 → 사용자 정의 함수, 무명 함수(함수명을 지정하지 않고, 함수를 변수에 저장하여 사용), 콜백 함수(매개변수로 전달되는 함수)
alert(“메시지”) → [확인] 버튼을 갖는 메시지 창을 띄워 경고와 같은 안내 메시지를 보여줄 때 사용
‘반환값 = confirm(“메시지”)’ → [확인] 또는 [취소] 버튼을 선택하도록 한 후 선택 버튼에 맞게 다음 작업을 수행할 때 사용
‘반환값 = prompt(“대화상자에 나타낼 설명”, 기본값)’ → 사용자에게 키보드로 원하는 데이터를 입력받을 때 사용
객체

객체 → 자바스크립트의 작업 대상이 되는 실세계에 존재하는 유무형의 모든 것
- 속성 → 객체 일부로 선언된 변수 → 객체의 상태/특성을 표현
- 메서드 → 객체 일부로 선언되어 객체와 관련된 작업을 처리하는 함수 → 데이터를 동작하는 규칙/방법
객체의 구분 → 내장 객체(String, Array, Date, Math 등) vs 사용자 정의 객체
String 객체 → 문자의 모양을 지정하거나 문자열을 다루는 객체
- 속성 → length
- 글꼴 관련 메서드 → big(), small(), bold(), italics(), strike(), sub(), sup(), fontcolor(), fontsize()
- 위치 이동 관련 메서드 → anchor(), link()
- 문자열 처리 관련 메서드 → toLowerCase(), toUpperCase(), substring(), slice(), substr(), charAt(), indexOf(), lastIndexOf(), concat(), replace(), split(), charCodeAt(), String.fromCharCode(), trim()
Array 객체 → 배열을 사용하기 위한 객체 → 하나의 자료형이 아닌 여러 종류의 객체를 혼합해서 저장 가능
- 속성 → length
- 메서드 → join(), reverse(), sort(), slice(), concat(), indexOf(), push(), pop(), shift()
Date 객체 → 사용자 시스템의 날짜와 시간을 관리하는 객체
- 정보 획득 메서드 → getFullYear(), getMonth(), getDate(), getDay(), getHours(), getMinutes(), getSeconds(), getMilliseconds(), getTime()
- 설정 메서드 → setFullYear(), setMonth(), setDate(), setDay(), setHours(), setMinutes(), setSeconds(), setMilliseconds(), setTime()
- 날짜/시간 표시 형식을 지정하는 메서드 → toString, toLocaleString, toGMTString()
Math 객체 → 수학 계산과 관련된 객체 → new 연산자 없이 사용
- 속성 → E, LN10, LN2, PI, SQRT1_2, SQRT2
- 메서드 → abs(), acos(), asin(), atan(), atan2(), ceil(), cos(), exp(), floor(), log(), max(), min(), pow(), random(), round(), sin(), sqrt(), tan()
사용자 정의 객체 → 일반 함수와 동일한 형식의 생성자 함수를 이용하여 정의 → new 연산자를 사용하여 객체 변수 생성 → 점 연산자를 이용하여 속성 및 메서드 참조
이벤트

이벤트 → 사용자의 특정 동작이나 문서나 브라우저의 상태가 변할 때 발생하는 특정한 사건이나 동작 → 특정 이벤트에 대응하여 적절한 처리를 담당하는 이벤트 리스너를 자바스크립트 코드로 작성하면, 해당 이벤트가 발생할 때마다 이와 연동된 이벤트 리스너가 자동으로 호출되어 작업을 처리
주요 이벤트 → 윈도우(load, unload), 포커스(focus, blur), 폼(change, select, submit, reset), 키보드(keydown, keyup, keypress), 마우스(click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout) 등
이벤트 리스터 작성 방법
- <요소명 속성명=값 … 이벤트리스너이름=“자바스크립트 코드”> → 이벤트 리스너 이름은 ‘on이벤트명’ 형식으로 지정
- addEventListener() → ‘DOM객체명.addEventListener(“이벤트명”, 실행함수명)’ → 실행함수명 부분에 익명 함수 적용 가능
- DOM 객체의 속성으로 지정 → ‘DOM객체명.이벤트리스너이름=실행함수명’
이벤트 객체 → 이벤트와 관련된 다양한 정보를 담고 있는 객체 → 이벤트의 종류에 따라 담고 있는 정보의 종류가 달라짐
- 이벤트 객체를 전달하는 함수에서는 매개변수명으로 ‘event’를 사용

1. 개요
 웹 페이지의 동작을 담당

 자바스크립트 선언 방식
 - 내부 스크립트
  문서에 소스 위치
  <script>여기에 위치함</script>
 - 외부 스크립트
  소스를 별도의 외부 파일로 만들어 놓고 불러와 사용
 - 인라인 스크립트
  이벤트 속성의 값으로 코드 삽입

2. 변수, 연산자
 변수 선언
 - 데이터를 저장할 적절한 크기의 공간을 확보하는것을 변수 선언
 - 변수가 가질 수 있는 데이터의 종류를 나타내는 자료형과 각 변수를 구별하기 위한 이름에 해당하는 식별자 필요

 명시적 선언 없이 변수사용 가능
 - 자동 생성, 값을 대입하는 순간 자료형이 결정

3. 객체
4. 이벤트