디자인패턴이란 소프트웨어 설계 또는 디자인 과정에서 공통적으로 발생되는 문제들에 대한 청사진이다.

디자인 패턴은 3가지 유형으로 나뉜다.
1. 생성패턴
 객체 생성, 초기화 ,클래스 선택에 관한 패턴(ex: 싱글톤, 팩토리)
2. 행동패턴
 객체 간 소통, 메시징, 상호작용에 관한 패턴 (ex: 옵저버)
3. 구조패턴
 클래스와 객체 관계를 조작하는 패턴 (ex: 장식자)

디자인 패턴은 문제가 있을때만 사용해야 하며, 문제가 없거나 발생할 가능성이 없다면 디자인 패턴을 사용하지 않아야 한다
디자인 패턴의 남용은 개발 복잡도를 향상시키며 코드의 유지보수에도 어려움이 있다.

자주 사용되는 패턴으로
mvc, 싱글톤, 빌드, 이터레이터등