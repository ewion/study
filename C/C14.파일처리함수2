 학습개요
이번 강의에서는 순차파일 입출력함수와 랜덤파일 입출력함수 그리고 랜덤파일의 위치제어에 대해 학습한다.

학습목표
순차파일을 만들고 읽을 수 있다.
랜덤파일을 만들고 읽을 수 있다.
랜덤파일의 위치를 제어할 수 있다.

주요용어
레코드(record) : 파일을 구성하는 논리적인 기본 단위
텍스트 모드(text mode) : \n과 CR/LF사이의 변환과정을 거치는 파일 모드
2진 모드(binary mode) : \n과 CR/LF사이의 변환과정이 없는 파일 모드
랜덤파일의 위치제어 : fseek()함수를 사용하여 랜덤파일의 특정부분을 입출력하는 것

내용
1. 순차파일 입출력함수
 순차파일 출력함수
 - 만들어진 파일에 자료를 기록하는 함수
 - 함수
  putc()
  fputc()
  fputs()
  fprintf()

 putc() 함수
 - 문자 단위의 파일 출력함수
 - fputc() 함수와 유사
 - 형식
  putc(문자변수, 파일포인터변수);
  putc(c, fp);
  fp가 가리키는 파일에 변수 c에 있는 문자를 출력

 fputs() 함수
 - 문자열을 파일로 출력할 때, 문자열을 디스크에 저장할 때 사용
 - 형식
  fputs(문자열변수, 파일포인터변수);
  fputs(s, fp);

 fprintf() 함수
 - printf()는 모니터에 출력, fprintf()는 파일단위로 자료를 출력
 - 지정된 형식을 가짐
 - 여러 항목의 복합적인 자료로 구성된 레코드를 저장할 때 유용

 C언어에서는 입출력장치를 파일 개념으로 처리
 - C프로그램에서는 자동적으로 3개의 표준파일에 대한 포인터를 생성
 - 이러한 표준파일에 대해서는 파일포인터를 별도로 선언할 필요 X
 - 표준 파일포인터의 명칭
  표준입력 stdin 키보드
  표준출력 stdout 모니터
  표준에러 stdert 모니터

 순차파일 입력함수 순차파일 읽기
 - 파일 출력함수에 의해 만들어진 순차파일의 저장된 자료를 읽어 내는 함수
 - 자료를 읽을 때는 파일에 끝에 있는 EOF신호를 만날때까지 읽을수 있는 프로그램 작성

 getc() 함수
 - 문자 단위의 파일 입력함수
 - fgetc() 함수와 유사

 fgets() 함수
 - 파일에 저장된 문자열 자료를 읽을 때 사용
 - 읽어 낼 문자열의 길이를 반드시 명시

 fscanf() 함수
 - 숫자,문자 등 복합적인 자료로 구성된 레코드를 읽을 때 사용
 - 일반적으로 파일의 끝을 판별하는 feof()함수와 같이 사용

 레코드 추가를 위한 사용 모드
 - a, a+, ab, ab+
 - 형식
  fp=fopen("파일명", "a");

2. 랜덤파일처리
 랜덤파일
 - 레코드의 길이가 일정
 - 파일의 임의의 위치에서 자료를 읽거나 쓸 수 있다
 - 순차파일과 비교
  단점 : 기억공간 낭비
  장점 : 레코드 검색이 빠르고 효과적

 랜덤파일 열기
 - 일반적으로 랜덤파일을 입출력할 때는 2진모드로 파일 개방
 - 2진 모드의 특징
  텍스트 파일보다 적은 기억공간
  레코드의 길이를 프로그래머가 결정
  파일포인터 위치 변경 가능

3. 랜덤파일 입출력함수
 fwrite() 함수
 - 형식
  fwrite(저장자료변수, 레코드길이
         레코드개수, 파일포인터)
 - 레코드의 길이를 지정
 - 자료저장 변수는 포인터형

 랜덤파일 읽기
 fread() 함수
 - 형식
  fread(읽을 자료변수, 레코드길이
        레코드길이, 파일포인터)
 - 읽기에 성공하면 읽은 레코드 수를 리턴

4. 랜덤파일의 위치 제어
 fseek() 함수
 - 파일 포인터를 임의의 위치로 이동시키는 함수
 - 랜덤파일의 특정부분을 입출력 할 수 있다
 - 형식
  fseek(파일포인터 변수, 이동할 상대위치
            기준위치를 지정하는 모드)
 - 기준위치로부터 앞 뒤로 이동하는 상대위치 개념 사용