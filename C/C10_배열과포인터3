1. char형 포인터
 char 포인터
 - 포인터는 문자열 처리에 효과적
 - 문자열 처리에 char형 포인터 사용
 - char 포인터의 기억공간 표현
  ex) char * cp = "computer"

2. 포인터와 배열의 관계
 포인터와 배열의 관계
 - 포인터를 이용한 1차원 배열의 참조
  char s[]="SCIENCE";
  char * cp;
  cp = s;
  포인터 cp를 이용하여 배열 s의 내용을 참조
 - 배열은 포인터의 일부분
 - 모든 배열은 포인터로 표현 가능
 - 배열의 이름이 갖는 의미는 주소(배열의 시작 주소)
 - 포인터와 배열은 서로 호환적
 - 배열과 포인터의 기억공간 확보
  배열 : 기억공간 중 자료영역을 고정적으로 확보
  포인터 : 기억공간 중 자료영역을 유동적으로 확보
  포인터가 배열보다 활용 폭이 넓다

3. 포인터 배열
 개념
 - 포인터의 집합
 - 포인터가 여러 개 사용될 때 포인터 배열로 선언
 - 주로 문자열 배열 처리에 사용

4. 이중 포인터
 개념
 - 자료가 있는 곳을 이중으로 가리키는 포인터
 - 이중포인터가 가리키는 곳을 가면 자료가 아닌 주소값이 있고 그 주소에 자료가 있음

 선언
 - 형식 : int **p;
 - 포인터 변수에 다시 포인터를 지정하는 것으로 포인터에 대한 포인터
  p 기억공간 주소
  *p 주소 p에 수록되어 있는 값, 이 값이 주소
  **p 주소가 *p에 수록되어 있는 값, 즉 int형 자료
