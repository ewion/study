학습개요
이번 강의에서는 프로그래밍 언어에 대한 개념에 대해 설명하고 C 언어의 중요한 특징, C 프로그램의 작성을 위한 준비과정, 그리고 C 프로그램의 기본 구조와 구성 요소에 대해 학습하고자 한다.

학습목표
C 언어가 다른 프로그래밍 언어와 구별되는 점을 이해한다.
여러 가지 C 컴파일러를 사용할 수 있다.
작성된 C 프로그램을 컴파일하고 실행할 수 있다.
C 프로그램의 기본 구조를 이해할 수 있다.
C 프로그램의 구성 요소들을 이해할 수 있다.

주요용어
컴파일러(compiler) : 프로그래밍 언어로 작성된 프로그램을 기계어로 바꿔주는 번역기
소스코드(source code) : 프로그램 안에 있는 명령어
목적 파일(object file) : .obj의 확장자를 갖는 파일로 기계어들의 집합으로 이루어진 파일
링커(linker) : 여러 목적파일과 라이브러리 파일을 연결해주는 도구
예약어(reserved word) : C 언어에서 미리 정의되어 있는 단어

1. C언어의 정의 역사 특징
 정의
 - 프로그래밍 언어이다
 - 컴파일러가 필요함, 컴파일러vs인터프리터vs어셈블러

 역사
 - 1972년 데니스 리치 개발
 - 유닉스 운영체제에서 사용할목적으로개발

 특징
 - 프로그램 이식성이 높음
 - 간단한 문법표현으로 함축적인 프로그램 작성 용이
 - 저급언어 특성을 가진 고급언어, 고급언어이지만 하드에어를 쉽게 제어할 수 있음

2. C프로그램의 작성 및 준비
 프로그램 개발 단계
 1. 프로그램 목적 정의
 2. 프로그램 설계
 3. 소스코드 작성
 4. 컴파일/링크
 5. 프로램 실행
 6. 테스트와 디버깅
 7. 유지 보수

 C언어의 프로그램 개발 단계
 - 에디터 컴파일러 필요

 C 프로그램의 완성 과정
 - 코딩 -> 컴파일 -> 링킹
 - 코딩 : 주어진 문제에 대한 서계를 바탕으로 소스코드를 작성하여 소스파일을 생성하는 과정
 - 컴파일 : 작성한 소스코드를 기계어로 바꾸는 과정
 - 링킹 : 목적파일(컴파일에서 만들어진 파일) 을 실행파일로 변환하는 과정( .C 파일, 확장자에 따라 작동하는 컴파일러가 다름)

3. C프로그램의 구성
 C 프로그램의 기본 구조
 - 도입부
  프로그램 전체에 적용되는 사항을 기술
 - 메인 함수 부분
  C언어로 작성한 프로그램이라면 반드시 존재해야 함
 - 함수 파트
 - 기본 구조
  반드시 하나 이상의 함수 포함
  반드시 main() 함수가 존재
  함수의 시작과 끝을 알리는 중괄호 {} 사용
  중괄호 안에는 변수선언문, 치환문, 연산문, 함수 등의 명령 기입
  선행처리기를 제외하고 문장의 끝에는 세미콜론을 붙임

 구성 요소
 - 예약어
 - 명칭
 - 상수
 - 연산자
 - 설명문

 명칭
 - 영문자의 숫자의 조합
 - 명칭의 첫 문자는 영문자나 언더바로 시작
 - 특문 사용 금지 언더바는 가능
 - 문자 사이 공백 불가능
 - 예약어 사용 불가능
 - 영문자는 대소문자 구분
 - 명칭의 길이는 컴파일러에 따라 차이 있음, 일반적으로 32자

4. 에러와 경고
 에러
 - C언어의 문법상 잘못된 경우 에러메시지, 컴파일 불가능
 - 반드시 에러 수정해야 함

 경고
 - 경미한 오류로 컴파일은 가능