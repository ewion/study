학습개요
표현 언어는 간결한 형태의 수식을 표현하는 것으로 JSP 페이지에서 표현식을 대신할 수 있고 스크립트 작성 노력을 크게 줄일 수 있다.
표현 언어는 태그의 속성 값을 지정할 때, 템플릿 데이터 영역 또는 태그의 몸체 내부에서 값을 출력할 때 사용된다.

학습목표
표현 언어의 의미와 용도를 설명할 수 있다.
표현 언어의 내장 객체를 나열하고 설명할 수 있다.
param, header, cookie, requestScope 내장 객체를 사용할 수 있다.
JSP 페이지에서 표현식 대신에 표현 언어 수식을 사용할 수 있다.

정리하기
표현 언어는 JSP 페이지의 스크립트 요소 밖에서 사용되며 표현식보다 간단하게 값을 표현할 수 있다.
표현 언어는 별도의 내장 객체를 가지며 기본 형식은 ${수식}이다.
표현 언어 수식에서 ‘.’이나 ‘[]’ 연산자를 사용하여 자바빈 객체가 가지는 속성의 값을 읽을 수 있다.
pageScope, requestScope, sessionScope, applicationScope는 영역에 저장된 속성들을 저장하고 있는 Map 객체이다.
param은 클라이언트가 보낸 요청 파라미터, header는 요청 헤더, cookie는 쿠키 객체를 가지고 있는 Map 객체이다.

1. 표현 언어의 기본 문법
 표현 언어 (Expression Language) 개념
 - JSP 2.0에서 추가된 간결한 수식 언어로 EL이라고 함
 - 자바빈이나 영역 속성에 저장된 데이터를 쉽게 표현할 수 있게 함
 - 스크립트 요소 밖에서 사용되며, 데이터를 출력하거나 태그에 사용되는 속성값을 지정할 때 사용
 - 표현식 <%= ... %> 를 대신하여 JSP 페이지에서 스크립트 사용을 줄여줌
 - ${수식} 의 형태

 기본 형식
 - ${수식}
  EL 수식에서 산술, 관계, 논리 연산이 가능
  수식에서 가장 많이 사용되는 연산자는 . 과 []
  EL 수식에는 다음과 같은 내용이 나올 수 있음
  ${객체 , 객체.속성, 객체["속성"], 객체['속성'], 배열[인덱스번호] }

 표현 언어의 기능
 - 수식에 사용되는 산술, 관계, 논리 연산자 제공
 - 자바 클래스의 메소드 호출 기능 제공
  태그 라이브러리에 정의된 함수 호출
 - 집합 객체(배열, 리스트) 에 대한 접근 방법 제공
 - JSP 에서 영역 내장 객체에 저장된 속성과 자바빈 객체를 쉽게 다룰 수 있음
  pageScope, requestScope, sessionScope, applicationScope
 - 표현 언어에서 별도의 내장 객체 제공

 표현 언어의 해석
 - 표현 언어에서 사용되는 자료형은 정수, 실수, 문자열, true, false , null
  문자열은 'xx'와 "xx"를 같은 의미로 사용
 - ${name} 의 해석
  name은 표현 언어의 내장객체가 될 수 있음
  name은 영역에 저장된 속성의 이름이 될 수 있음
   순서대로 page, request, session, application 영역에 등록된 속성에서 이름이 name인 것을 찾음
   이 때 상응하는 속성값을 문자열로 출력함
   찾을 수 없다면 null을 반환
  name은 자바빈 객체의 이름이 될 수 있음
  수식계산의 결과는 객체의 문자열 표현이 됨

 표현언어의 사용
 - 스크립트 요소(스크립트릿, 표현식, 선언) 밖에서 사용
 - 태그의 몸체 내부나 데이터 출력이 필요할 때 사용
 - EL 수식의 최종결과는 String
 - 태그에 사용되는 속성값을 지정할 때 사용됨
 - 다음 지시어는 EL을 비활성화 함
  <% page isELIgnored = "true" %>

 표현언어의 사용 예
 ${person.name}
 - person은 EL의 내장 객체 (대부분 map유형) 또는 자바빈 객체 또는 영역에 저장된 속성이름
 - name은 Map의 키이거나 자바빈 객체가 가지는 속성
 ${person["name"]}
 - 위와 같은 의미
 - person은 배열이나 리스트유형이 될 수 있으며 이때 ${person[1]} 이나 ${person["1"]}가 가능, ${person.1}은 불가
 - 인용 부호가 없는 ${person[name]}에서 name은 변수로 취급됨

 요청 파라미터의 출력
 - param은 표현 언어의 내장 객체임
  <%= request.getParameter("userid")%>
  ${ param.userid}
 - request영역에 포함되어 있는 속성 객체의 출력
  <%= request.getParameter("name")%>
  ${requestScope.name}
 - 자바빈 객체가 가지고 있는 특정 속성의 값을 출력하거나 태그의 속성에 값을 지정

2. 표현 언어의 내장 객체
 내장 객체
 - pageScope
 - requestScope
 - sessionScope
 - applicaionScope
 - param
 - paramValues
 - header
 - headerValues
 - cookie
 - initParam
 - pageContext

 cookie
 - 쿠키의 확인
  표현 언어 내장 객체 cookie는 <쿠키이름, cookie객체> 형태로 쿠키들을 저장한 Map객체
  ${cookie.쿠키이름} 은 하나의 Cookie객체가 됨
  개별 Cookie객체는 <이름,값>으로 구성되므로 ${cookie.이름.name}과 ${cookie.이름.value}를 사용

 param
 - 요청 파라미터를 읽기 위한 객체

 영역의 표현 언어의 내장 객체
 - pageScope, requestScope, sessionScope, applicationScope
  영역에 저장된 속성의 <이름, 값>을 저장한 Map 객체
  JSP내장객체 request에 이름이 "name"인 속성(객체)를 저장한 경우, 다음은 속성값(객체의 문자열 표현)을 출력함
 - 표현 언어 수식에서 속성의 이름만 사용하는 경우
  ${name}
  각 영역을 순서대로 검색해 이름이"name"인 속성(객체)를 확인함

3. 표현 언어와 자바빈
 자바빈 객체의 사용
 - 액션 태그에서 사용
  <jsp:useBean> 액션태그로 자바빈 객체를 선언
  <jsp:getProperty> 와 <jsp:setProperty> 액션태그를 이용하여 객체속성값을 읽거나 변경
 - 스크립트릿에서 사용
  <jsp:useBean> 액션태그로 선언된 자바빈 객체를 스크립트요소에서 사용함
  스크립트릿 안에서 자바빈 클래스의 객체를 생성후 자바빈 객체를 사용함
 - 표현 언어에서 사용
  표현언어 수식에서 자바빈객체를 사용하면 스크립트사용을 줄일 수 있음

 <jsp:useBean>액션태그로 자바빈객체를 선언한 경우
 - ${자바빈객체.속성} 의 형식을 사용하여 값을 읽을 수 있음
 스크립트릿에서 자바빈객체를 생성한경우
 - 표현언어 수식에서 사용하려면 먼저 자바빈객체를 영역객체의 속성으로 등록해야함