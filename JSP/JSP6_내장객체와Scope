학습개요
pageContext 객체는 JSP 페이지에 대한 정보 관리 기능을 제공한다.
application 객체를 이용하여 웹 어플리케이션에 대한 정보를 관리할 수 있으며 out 객체는 JSP 페이지의 결과 출력에 사용되는 출력 스트림 객체이다.
영역(scope)은 데이터가 공유될 수 있는 JSP 페이지의 그룹을 의미하는데 page, request, session, application 영역이 있다.

학습목표
내장 객체 pageContext, application, out을 사용할 수 있다.
web.xml 파일을 찾아 수정할 수 있다.
pageContext, request, session, application 객체를 설명할 수 있다.
페이지 간에 속성을 통한 데이터 공유를 설명할 수 있다.

정리하기
내장 객체는 JSP 컨테이너가 자동으로 만들어 제공하므로 자유롭게 사용할 수 있다.
pageContext 객체는 하나의 JSP 페이지와 1:1로 대응되는 객체로서 JSP 페이지에서 사용되는 내장 객체를 리턴하는 메서드를 제공한다.
application 객체는 웹 애플리케이션의 정보를 저장하고 관리하는 객체로서 특정 웹 애플리케이션에 포함된 모든 JSP 페이지는 하나의 application 객체를 공유한다.
웹 애플리케이션 폴더의 WEB-INF 폴더에 있는 web.xml 파일은 웹 애플리케이션의 설정 파일로서 초기화 파라미터, 서블릿과 서블릿 매핑 등의 설정 정보를 포함한다.
JSP 페이지에서 브라우저로 보낼 결과의 출력을 위해 out.print( )나 out.println( )을 사용한다.
request 영역은 한 번의 요청을 처리하기 위한 JSP 페이지들, session 영역은 세션이 생성되어 브라우저가 종료될 때 까지 사용되는 JSP 페이지들, application 영역은 웹 애플리케이션에 포함된 모든 JSP 페이지들로 구성된다.

1. 내장 객체
 객체의 종류
 사용자 정의 객체
 - JSP페이지 내에서 선언하고 사용하는 객체
 - 스크립트릿이나 선언에서 객체를 생성한 경우
 - <jsp:useBean>을 이용해 자바빈 객체를 생성한 경우

 JSP 내장 객체
 - JSP 컨테이너가 번역 과정에서 만들어서 제공
 - JSP 페이지 내에서 묵시적으로 선언되어 있는 객체
 - 선언이나 초기화 없이 사용할 수 있는 변수
 - 스크립트릿, 표현식, 표현언어 등에서 사용함

 JSP 내장 객체 목록
 - request
  HttpServletRequest, ServletRequest
  클라이언트의 요청 정보 관리(request 영역)
 - response
  HttpServletResponse, ServletResponse
  웹 서버의 응답 정보 관리
 - pageContext
  PageContext
  JSP 페이지에 대한 정보 관리 (page 영역)
 - session
  HttpSession
  HTTP 세션 정보 관리 (session 영역)
 - application
  ServletContext
  웹 애플리케이션에 대한 정보 관리 (application 영역)
 - out
  JspWriter
  브라우저에 보낼 컨텐츠를 출력할 때 사용되는 출력 스트림
 - config
  ServletConfig
  JSP 페이지에 대한 설정 정보 관리
 - page
  Object
  JSP 페이지를 구현한 자바 클래스의 인스턴스
 - exception
  Throwable
  에러 페이지 안에서 오류메시지 출력 등의 예외처리에 사용

2. pageContext, application, out 사용법
 pageContext 내장 객체
 - 페이지 컨텍스트 관리 객체
  페이지를 표현하고, 페이지영역을 관리하는 객체
  페이지에서 사용되는 개체들의 레퍼런스를 저장하고 있음
  다른 내장 객체의 참조값을 리턴하는 메소드를 제공
 - javax.sevlet.jsp.PageContext 의 인스턴스
 - JSP 페이지에서 잘 사용하지 않음

 application 내장 객체
 - 웹 애플리케이션과 관련된 정보 관리
  web.xml에 저장된 설정정보 조회
  웹컨테이너 정보 조회
  로그 메시지의 기록
  웹 애플리케이션의 폴더 정보 조회
 - 애플리케이션 영역을 관리하는 객체
  서블릿 컨텍스트를 관리하는 객체
  특정 웹 애플리케이션에 포함된 모든 JSP 페이지는 하나의 애플리케이션객체를 공유함
 - javax.servlet.ServletContext의 인스턴스

 web.xml
 - 웹 애플리케이션 내의 모든 JSP 페이지에서 공유하는 설정 정보를 저장
 - WEB-INF에 위치
 - <context-param>태그를 이용하여 설정 공유 가능

 out 내장 객체
 - 클라이언트로 보낼 컨텐츠를 작성하기 위해 사용하는 출력 스트림
 - JspWriter 유형의 out 객체를 이용
  서블릿 프로그램에서는 response.getWriter() 를 이용하여 출력
 - 서블릿 프로그램으로 변환될 때
  HTML 태그나 텍스트는 out.print(String)에 문자열로 전달됨
  표현식에서는 수식이 out.print(수식) 에 인자로 전달됨

 out 객체의 출력 메소드
 - print(인자), println(인자), println()
 - newline()

 out 객체와 버퍼링
 - JSP 페이지의 실행 결과는 기본적으로 자동 버퍼링됨
  page 지시어에서 buffer 속서의 기본값은 '8kb'
 - 버퍼는 out 객체가 내부적으로 사용하는 버퍼임

3. 내장 객체와 영역
 영역
 - JSP 페이지에서 객체들은 scope 속성을 가짐
  scope는 객체의 활동 영역 또는 객체의 사용 범위를 의미
  영역을 표시하는 속성값으로 page, request, session, application 이 존재함
 - 같은 영역 내의 JSP페이지들은 협력 작업을 위해 정보를 공유할 필요가 있음
  데이터 공유를 위해 영역을 표현하는 내장 객체가 존재함

 page 영역
 - 1개 JSP 페이지 내부
 - 클라이언트에 응답을 보내거나 포워딩이 일어나면 없어짐
 - page 영역에 존재하는 객체 레퍼런스들은 pageContext 객체에 저장됨

 request 영역
 - 같은 요청을 처리하는 페이지들로 이루어짐
  <jsp:forward> 또는 <jsp:include>를 사용할 때
 - 요청의 처리가 끝나면 영역은 없어짐
  요청에 대한 응답이 이루어질 때 까지 유지됨
  요청이 1개의 JSP 페이지에서 처리되면 page영역과 request 영역은 동일함
 - 영역의 정보는 request 객체에 저장됨

 session 영역
 - 같은 세션 내에서 일련의 요청을 처리하는 페이지들로 이루어짐
  세션은 하나의 웹브라우저에서 유지됨
  웹브라우저가 실행되는 동안 요청처리에 사용된 모든 페이지 영역의 총합
 - session 영역의 객체 레퍼런스는 session 객체에 저장됨

 application 영역
 - 1개 웹 애플리케이션 전체 영역
  같은 애플리케이션 내의 페이지들 간 공유하는 정보가 존재함
 - 웹컨테이너를 다시 시작시키면 리셋
 - 영역의 정보는 application 객체에 저장됨

4. 속성을 이용한 데이터 공유
 데이터 공유
 - 영역을 표현하는 내장 객체를 이용하여 여러 JSP 페이지 사이에서 데이터 공유 가능
 - 데이터 공유를 위해 영역을 관리하는 내장 객체들은 속성을 관리함, 정보를 주고받기 위해 새로운 속성을 정의하여 사용
 - 속성은 <이름, 값> 형태

 속성 값 설정하기
 - setAttribute(String name, Object value)
 - 속성의 이름은 String 유형
 - 속성의 값은 다양한 유형의 객체
  기본형의 값을 주어도 대응되는 래퍼 클래스로 자동 형변환됨

 속성 값 읽기
 - getAttribute(String name)
 - 속성 값은 Object 유형으로 리턴됨
 - 속성 값을 읽을 때에는 유형에 맞게 형변환 해야함
 - 기본형의 경우 대응되는 래퍼 클래스를 사용

 pageContext 객체
 - 하나의 JSP 페이지에서 공유되는 데이터를 저장

 request 객체
 - 한 번의 요청을 처리하기 위해 사용되는 JSP 페이지들에서 공유되는 데이터를 저장

 session 객체
 - 세션이 유지되는 JSP 페이지들에서 공유되는 데이터를 저장
 - 웹 브라우저 단위로 데이터를 공유
 - 사용자의 로그인 정보를 유지 할 때 사용함

 application 객체
 - 웹 애플리케이션 내에서 공유되는 데이터를 저장
 - 웹 애플리케이션 설정 정보의 관리