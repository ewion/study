학습개요
세션은 연관된 일련의 요청을 하는 클라이언트의 상태를 관리하기 위한 기법이다.
JSP에서 클라이언트가 최초 접속하면 세션이 자동으로 만들어지며 웹 컨테이너는 세션 관리를 위해 session 내장객체를 제공한다.
세션 정보는 쿠키와 다르게 서버에서 객체 형태로 저장된다.

학습목표
세션과 쿠키의 차이점을 설명할 수 있다.
session 객체를 사용하여 세션 관리를 위한 프로그래밍을 할 수 있다.
정보 공유를 위해 session 객체에 속성을 저장할 수 있다.
세션으로 로그인/로그아웃을 처리할 수 있다.

정리하기
쿠키와 다르게 세션 정보는 웹 브라우저가 아니라 서버에 저장된다.
세션 관리를 위한 session 내장 객체는 클라이언트가 웹 서버에 최초 접속했을 때 자동으로 생성된다.
여러 요청을 처리하는 세션이 유지되는 동안, session 영역 내의 JSP 페이지들은 session 객체를 공유한다.
웹 브라우저를 종료하거나 세션의 유효시간이 경과되면 세션이 삭제된다.
서버에 저장된 세션을 삭제하기 위해서 invalidate() 메서드를 사용할 수 있다.
세션의 유효시간은 web.xml 파일에 항목을 사용하여 설정할 수 있고, JSP 페이지 안에서는 session.setMaxInactiveInterval(초) 메서드를 사용하여 설정한다.

1. 세션 관리
 세션의 의미
 - 클라이언트 상태 관리를 위한 기법
 - 클라이언트가 특정 작업을 수행하는 기간
  클라이언트는 여러 페이지를 이동하면서 연관된 일련의 요청 보냄
  이런 경우 웹앱은 클라이언트 상태를 유지해야 함
  즉, 클라이언트 별로 필요한 정보를 저장할수 있어야 함

 세션 관리
 - 서버는 브라우저 별로 1개의 세션을 생성
 - 웹 브라우저를 종료하면 세션 종료
 - 세션 유효 시간이 경과되는 경우 기존 세션 종료됨

 JSP의 세션 관리
 - 웹 컨테이너는 웹브라우저당 1개의 세션아이디 부여
 - 클라이언트 최초 요청 시 웹컨테이너는 session 객체를 만들고 세션 아이디를 부여함
 - 최초 요청의 응답에 세션 아이디 (JSESSIONID)를 쿠키로 포함시켜 웹브라우저로 전송
 - 이후 웹브라우저는 자신의 세션 아이디를 웹컨테이너에 전송함
 - 클라이언트가 보낸 세션 아이디를 이용하여 사용자를 식별

 쿠키와 세션의 비교
 - 쿠키
  사용자 정보가 클라이언트측에 저장
  텍스트 형태로 저장
  정보의 크기에 제한 (4k)
  상대적으로 보안에 약함(헤더와 함께 전송되어 사용자에게 노출됨)
 - 세션
  서버 측에 저장
  객체 형태로 저장
  정보의 크기에 제한 없음(바디와 함께 전송)
  서버에 저장되어 상대적으로 보안에 유리

 세션 내장 객체
 - JSP기술에서 세션관리를 위해 제공되는 내장 객체
 - 클라이언트가 웹컨테이너에 최초 접속하면 세션이 자동으로 생성
  page지시어에서 session속성을 false로 지정하면 세션 지원X
 - 접속할 때 세션이 존재하면 기존 세션을 그대로 사용
 - 웹 컨테이너가 제공하는 HttpSession 유형의 객체

 세션 영역

2. session 내장 객체 사용
 세션 내장 객체의 기본 기능
 - 하나의 웹 브라우저로부터 들어오는 여러 요청을 처리할 때, 필요한 사용자 정보를 session객체에 저장
 - 세션 영역을 표현
  session 영역에서 데이터 공유를 위해 속성저장가능
 - 세션 정보를 저장하고 조회할 수 있음
  세션아이디, 유효시간, 생성시간 등

 세션 내장 객체의 메소드
 - 내장 객체 session은 HttpSession유형임
 - getid() return String 세션별로 고유하게 부여되는 세션아이디 리턴
 - getCreationTime() return long 세션 생성된 시간 리턴
 - getLastAccessedTime() return long  클라이언트가 해당 세션에 가장 마지막으로 접근한 시간
 - setMaxIncativeInterval(long) return void 세션의 유효시간을 초단위로 설정
 - invalidate() return void 세션 삭제

 세션의 주요 정보

 속성 사용하기
 - session 객체의 공유
  세션이 유지되는 동안 여러 요청을 처리하는데 사용되는 JSP 페이지 사이에서 session 객체가 공유
  이러한 JSP 페이지들은 같은 session 영역 내에 존재
  request 객체는 한개의 요청을 처리하는 JSP 페이지들 사이에서 공유됨
  영역 표현하는 다른 내장 객체와 마찬가지로
  저장할 때 setAttribute (String name, Object value)
  읽을 때 getAttribute (String name)

 세션 삭제하기
 - 세션 삭제하려면 invalidate() 사용
  세션에 저장된 모든 속성 삭제
  세션에 저장된 특정 속성만 삭제하려면 removeAttribue(String name) 사용
 - 사용자가 웹브라우저를 종료하면 기존 세션 삭제
 - 설정된 유효시간이 경과하면 세션 삭제

 세션의 유효 시간
 - 클라이언트가 서버에 추가 요청을 하지 않고도 세션을 유지할 수 있는 최대 시간
 - 유효시간 설정 방법
  web.xml파일에 설정 정보 기록
  톰캣설치폴더\conf\web.xml 에 기록
  <session-config> 의 <session-timeout> 태그에 있고 태그에서 단위는 분임

 세션의 유효시간 설정방법
 - setmaxInactiveInterval (int interval)을 사용
  타임아웃 설정이라 하며 단위는 초
  설정된 유효시간내 추가요청이 없으면 세션삭제
  인수로 0 이나 음수는 웹브라우저를 종료하지 않는 한 무한유지

 HttpSession 인터페이스
 - session객체를 수동으로 얻기
  JSP에서 세션은 자동으로 만들어짐
  서블릿 프로그램에서는 session 이 내장객체가 아님
  request.getSession() 을 사용하여 현재의 세션 객체를 이용할 수 있음
   세션이 존재하지 않으면 세션 객체를 생성하여 리턴
  request.getSession(false)는 현재 세션 객체를 리턴함, 세션 존재하지 않으면 null 리턴

3. 세션을 이용한 로그인 로그아웃