학습개요
차례로 정렬된 데이터 리스트 k를 완전한 순서를 유지하는 하나의 리스트로 만드는 과정을 합병 정렬 이라고 합니다.
이 합병 정렬에 사용하는 트리가 선택트리입니다. 선택트리를 구성하는 방법에는 승자트리와 패자트리가 있습니다.
승자트리는 각 노드가 두 개의 자식노드 보다 더 작은 값을 갖는 완전 이진트리입니다.
작은 값이 승자로 올라가는 토너먼트 경기와 유사하다고 할 수 있습니다. 패자트리는 루트노드 위에 최상위 0번 노드를 갖습니다.
이 0번 노드에는 경쟁에서 이긴 최종 승자를 저장합니다. 즉, 패자를 부모 노드에 저장하고 승자는 부모의 부모 노드로 올라가서 다시 경쟁합니다.
여기서는 승자트리와 패자트리를 구성하는 방법을 정확하게 알고 가시면 됩니다. 다음으로, 분리된 트리 모임을 숲이라 부릅니다.
트리에서 루트 또는 다른 노드를 제거하면 숲을 쉽게 얻을 수 있습니다. 반대로 숲을 연결하면 트리를 만들 수도 있습니다.
숲을 이진트리로 만들어보는 방법을 이해하면 됩니다. 그리고 노드가 n개일 때 서로 다른 이진트리의 개수를 알 수 있는 방법을 설명합니다.
순회방법을 이용하는 방법과 스택을 사용하는 방법을 설명하고 카탈란이라는 수학자가 정의한 공식에 대해서도 설명합니다.

학습목표
선택트리의 정의를 이해할 수 있다.
승자트리와 패자트리의 구성 단계를 이해할 수 있다.
숲의 개념과 숲을 이진트리로 변환하는 방법을 이해할 수 있다.
노드가 개인 서로 다른 이진트리의 개수를 알 수 있다.

정리하기
합병 정렬 : 차례로 정렬한 데이터 리스트 k개를 완전한 순서를 유지하는 하나의 리스트 만드는 과정
선택 트리 : 합병 정렬에 사용하는 특수한 트리
승자 트리 : 각 노드가 두 자식 노드의 작은 값(승자) 인 완전 이진 트리
패자 트리 : 각 노드가 두 자식 노드의 큰 값(패자)이며 최종 승자는 0번 노드에 저장하는 트리
숲 : 분리된 트리 모임 n(>=0) 개 이상의 분리된 트리 집합
노드 n 개인 서로 다른 이진 트리의 개수

1. 선택 트리
 합병 정렬
 - 합병 정렬은 매 라운드 마다 7번의 비교 후 정렬 데이터가 많아지면 컴퓨터에 부하
 - 차례로 정렬된 k 개의 데이터 목록을 순서를 유지하는 하나의 데이터 리스트로 만드는 과정
 - 일반적으로 데이터 목록이 k개인 경우 k-1 번 비교를 통해 데이터 목록에서 가장 작은 값이나 가장 큰 값을 결정할 수 있음
 - 이 경우 선택트리를 통해 비교 횟수를 줄일 수 있음

 선택 트리
 - 각 노드가 두 자식 노드의 작은 값을 갖는 완전 이진 트리
 - 작은 값이 승자가 되어 올라가는 토너먼트와 유사
 - 트리의 각 노드는 두 자식 노드값의 승자를 자신의 값으로 함
 - 결과적으로 루트의 값이 트리에서 가장 작은 값이 됨

 승자 트리
 - 첫 번째 단계에서 비교 횟수를 줄이지는 못햇지만 두 번째 비교단계부터는 비교횟소가 감소됨
 - 재구성 관계에서 빈 리스트가 생기면 큰 값을 넣어줌

 패자 트리
 - 최상위 0번 노드에는 최종 승자를 저장
 - 입 노드들이 각 리스트의 head를 가리킴
 - 트리의 각 내부에는 승자가 아닌 패자를 저장, 즉 패자를 부모 노드에 저장하고 승자는 부모의 부모 노드로 올라가서 다시 경쟁
 - 루트에는 마지막 패자를 저장하고 최종 승자는 0번 노드에 저장
 - 예시
  0번 노드에는 최소값이 있으므로 이 값을 제거하여 전체 리스트에 저장
  제거된 값을 가지고 있던 4번 리스트에 헤드에 위치한 값 24를 패자트리에 올려 보내고 경쟁시킴
  패자 트리를 재구성

2. 숲
 정의
 - 분리된 트리 모임
 - 0개 이상의 분리된 트리 집함
 - 숲 : n(n>=0)개의 분리된 트리의 집합
 - 트리에서 루트(혹은 다른 노드)를 제거하면 숲을 쉽게 얻을 수 있음
 - 반대로 숲을 연결하면 트리를 만들 수 있음

3. 이진 트리 개수

 스택을 이용한 이진 트리의 순회
 - pop ()
  껍데기 노드에 값을 넣고 오른쪽 서브 트리로 이동하는 것
  왼쪽 서브 트리와 오른쪽 서브 트리의 중간에 도달했다는 의미
  중위순회에서 노드에 값을 넣은 후에 오른쪽 서브 트리로 이동함
 - push ()