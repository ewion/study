목표
배열의 추상 자료형을 이해할 수 있다.
배열의 원소의 순서와 저장 위치에 대해서 이해할 수 있다.
1차원 배열이 확장된 2차원 배열의 메인 메모리의 연속 할당을 이해할 수 있다.
희소행렬을 효율적으로 다룰 수 있는 자료구조를 이해할 수 있다.

정리
배열은 인덱스와 원소값()의 쌍으로 구성된 집합으로서, 정의된 각 인덱스는 그 인덱스와 관련된 값을 갖습니다.
배열의 순서는 메모리 공간에서 저장되는 ‘원소값의 물리적 순서’를 의미합니다.
배열의 각 원소의 물리적인 위치(메모리 주소)의 순서가 배열의 인덱스의 순서(논리적인 순서)와 일치합니다.
배열의 인덱스값을 이용해서 배열의 원소값에 접근하기 때문에 직접 접근(direct access)입니다.
배열의 물리적인 저장 순서는 배열의 인덱스에 의해서 결정되며, 그 순서에 따라 메인 메모리에서의 저장 위치의 순서가 됩니다.
create(n)은 n개의 원소들을 저장할 수 있는 공백 배열(empty array)을 생성합니다. 배열을 생성할 때 n개의 원소들을 저장할 수 있는 공간은 만들어지지만 그 안에 채워진 원소값들이 아직은 없다는 것을 의미합니다.
연산 retrieve(a,i)는 배열 a와 인덱스 i를 매개 변수로 전달받아 인덱스 i 위치에 대응되는 원소값 e가 있다면 원소값 e를 반환하고 그렇지 않은 경우 에러 메시지를 반환합니다.
연산 store(a, i, e)는 배열 a와 인덱스 i, 원소값 e를 매개 변수로 전달받아 Index를 검사하여 i값이 유효할 경우 쌍이 되게 원소값을 i번째 인덱스에 저장하고 배열 a를 반환합니다.
가장 기본적인 배열은 1차원 배열이며, 한줄짜리 배열을 의미하므로 인덱스는 하나입니다. 한줄짜리 배열은 메모리 영역도 한줄로 할당받습니다.
2차원 배열의 행우선 저장방식은 하나의 행이 모두 연속적으로 메모리 영역을 할당받고, 다음 행이 메모리 영역을 연속적으로 할당받는 방식입니다.
2차원 배열의 열우선 저장방식은 하나의 열이 모두 연속적으로 메모리 영역을 할당받고, 다음 열이 메모리 영역을 연속적으로 할당받는 방식입니다.
원소값이 0인 원소가 그렇지 않은 원소보다 상대적으로 많은 행렬을 희소행렬(sparse matrix)이라 합니다.

1. 배열의 정의
 원소의 메모리 공간(DDR, 메인 메모리)의 물리적인 위치를 '순서'적으로 결정하는 특징
 배열의 순서는 메모리공간에서 저장되는 '원소값의 물리적 순서'
 인덱스와 원소값의 쌍으로 이루어진 집합

2. 배열의 추상 자료형
 추상자료형
 - 객체 및 관련된 연산의 정의로 구성됨
 - 자료구조 구현 전의 설계 단계

 자료형
 - 메모리 저장 할당을 위한 변수 선언
 - 자료구조의 구현 단계

3. 배열연산의 구현

4. 1차원 배열
 인덱스 값이 하나면 1차원, n개면 n차원,

5. 배열의 확장
 행렬의 배열 표현
 - 행렬을 컴퓨터를 표현하기에는 2차원 배열이적합함

 행 우선 배열
 - 1차원 배열을 여러개 쌓아 올린 것을 행우선 배열
 - 행 우선 할당 : 가로의 1차원 배열 단위로 메모리 영역을 우선 할당함
 - 열 우선 배열도 존재하며, 행이 열로 바뀜

6. 희소행렬의 개념
 원소값이 0인 원소가 그렇지 않은 원소보다 상대적으로 많음
 0인 원소는 저장하지 않고 0이 아닌 값만을 따로 모아서 배열을 만들어 저장
 메모리 낭비를 막고 효율성 향상, 그러나 연산 시 문제 발생 가능성