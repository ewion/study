학습개요
리눅스에서는 모든 것이 파일로 취급되어 디렉터리나 디바이스도 파일로 다루어진다. 파일의 종류를 살펴보고 파일과 디렉터리의 접근권한이 가지는 의미를 이해하도록 한다. 파일과 디렉터리를 다루기 위한 셸 명령을 익히고 텍스트 파일의 출력을 위한 명령을 학습한다.

학습목표
리눅스에서 파일의 종류를 나열할 수 있다.
파일과 디렉터리를 조작하는 명령의 사용법을 익힌다.
파일과 디렉터리의 접근권한에 관해 설명할 수 있다.
파일의 내용을 확인하는 명령을 나열하고 설명할 수 있다.

정리
파일의 종류로 정규 파일, 디렉터리, 심벌릭 링크, 디바이스 파일 등이 있다
작업 디렉터리의 변경을 위해 cd 명령, 파일과 디렉터리의 상태 확인을 위해 ls, file, pwd 명령, 파일이나 디렉터리의 조작을 위해 mkdir, rmdir, cp, mv, rm, ln 명령 등을 사용한다.
umask 명령은 파일이나 디렉터리의 초기 접근권한 설정, chmod는 접근권한의 변경, chown은 소유자나 소유 그룹의 변경을 위한 명령이다.
텍스트 파일의 내용을 확인하기 위해 more, less, head, tail, cat 명령 등을 사용한다.

1. 파일 시스템 탐색
 파일 시스템
 - 운영체제가 디스크(파티션) 상에 파일들을 구성하는 방식
 - 파일과 디렉터리의 집합을 구조적으로 관리하는 체계
 - 다양한 형식의 파일 시스템이 존재
 - 리눅스는 전체 파일 시스템을 1개의 트리 구조로 관리, 1개의 루트디렉터리(/) 만 있음

 ls 명령
 - 파일과 서브 디렉터리 목록을 나열하는 명령, 셸 명령중 사용빈도가 높은 명령
  옵션에 따라 파일(또는 디렉터리)이 가지는 속성도 확인 가능
 - ls [option][names]
  ls directory
   디렉터리에 존재하는 파일과 서브 디렉터리 정보를 출력
  ls file
   해당 파일의 정보 출력
     -a  --all           모든 파일 보여줌. 점(.)으로 시작하는 숨김파일도 보여줌
     -d  --directory     디렉터리 자체에 대한 정보 보여줌
     -F  --classify      우측에 파일의 종류를 알려주는 문자를 붙임 실행파일은* 디렉터리는/
     -l  --format=long   긴 포맷으로 결과를 보여줌
     -R  --recursive     재귀적으로 수행되는데 서브디렉터리의 내용도 나열
     -S  --sort=size     파일의 크기 순서로 결과를 보여줌
     -t  --sort=time     최종 수정 시간 순으로 보여줌

 파일의 종류
 - 정규 파일
  데이터를 저장하는데 주로 사용
  각종 텍스트 파일 실행파일 이미지파일 등 리눅스에서 사용하는 대부분의 파일
  실행 파일이나 이미지파일의 경우 바이너리 형태로 저장되어 바이너리파일이라 함
 - 디렉터리
  리눅스에서는 디렉터리도 파일로 취급
  해당 디렉터리에 저장된 파일이나 하위 디렉터리에 대한 정보 저장
 - 심볼릭 링크
  소프트 링크라고도 함
  절대 또는 상대경로로 원본 파일을 가리키는 링크
  윈도우의 바로가기와 같음
 - 장치 파일
  리눅스에서 프린터 시디롬 하드디스크 키보드와 같은 각종 장치를 파일로 취급
  블록 디바이스 파일과 문자 디바이스 파일로 구분

 file 명령
 - 파일의 종류를 알려주는 명령

 pwd 명령
 - 절대경로 방식으로 현재 작업 디렉터리를 알려주는 명령

 cd 명령
 - 작업 디렉터리 이동 명령
  디렉터리를 지정하지 않으면 사용자의 홈 디렉터리로 이동
 - cd [directory]
  디렉터리 지정 방법은 절대경로와 상대경로가 있음

2. 파일과 디렉터리 관리
 mkdir 명령
 - 디렉터리를 만드는 명령
 - mkdir [options] directories
  mkdir dir1 dir2 dir3...
 - 옵션
  -p 는 필요한 경우 상위 디렉터리를 만듬
  ex) mkdir -p backup java
  -m 은 디렉터리를 만들면서 접근권한을 설정
  ex) mkdir -m 755 dir

 rmdir 명령
 - 디렉터리를 삭제하는 명령
  비어있는 디렉터리를 삭제할 수 있음
  디렉터리의 모든 파일과 하위 폴더를 포함하여 삭제하려면 rm -r dir 또는 rm -rf dir 사용(주의해야함)
 - 옵션
  -p는 비어 있는 디렉터리를 삭제하면서 부모 디렉터리가 비게 되는 경우 사용
  ex) rmdir -p dir1/dir

 cp 명령(copy)
 - 파일이나 디렉터리를 복사하는 명령
 - cp [options] file1 file2
  cp -i file1 file2
  대상 파일이 존재한다면 덮어쓰기 수행
 - cp [options] files directory
  마지막 인자가 디렉터리인 경우
  여러 파일을 지정된 디렉터리에 같은 이름으로 복사
  cp file1 file2 dir1
 - cp -r [options] directory1 directory2
  디렉터리를 재귀적으로 복사할 때 -r 옵션 사용
  대상 디렉터리가 존재하는 경우 그 곳에 디렉터리 자체가 복사

 mv 명령
 - 파일 또는 디렉토리의 이름을 변경하는 명령
 - 또는 다른 디렉터리로 이동하는 명령
 - mv [options] source target
  mv file1 file2
  이름을 변경, 대상 파일이 존재한다면 덮어쓰기
  mv dir1 dir2
  디렉터리 이름 변경, 대상 디렉터리가 존재하면 서브 디렉터리로 이동
 - mv [options] files directory
  마지막 인자가 존재하는 디렉터리인 경우 여러 파일을 지정된 디렉터리로 이동

 rm 명령
 - 파일 삭제 명령
 - rm [options] files
  파일 삭제시 주의
  alias rm='rm -i' 를 수행하여 알리아스 설정 하는 것도 좋은 방법
 - 옵션
  -r 옵션은 디렉터리(포함된 파일과 서브 디렉터리)를 모두 함께 삭제
  -i 옵션은 삭제 전 물어봄
  -f 옵션은 물어보지 않고 무조건 삭제함

 파일의 접근 권한
 - 권한없는 사용자의 접근을 막기 위해 접근권한을 설정함
  사용자 부류에 따라 읽기/쓰기/실행 권한을 각각 설정
 - 사용자 부류
  소유자 (u), 그룹 (g), 기타 (o)
 - 권한
  읽기 (r) : 파일의 내용 보기
  쓰기 (w) : 파일의 내용 수정 삭제 내용변경 등
  실행 (x) : 파일 실행

 티렉터리의 접근 권한
 - 권한
  읽기 (r) : 디렉터리가 가진 파일과 서브디렉터리 목록 보기
  쓰기 (w) : 파일과 디렉터리 만들거나 삭제하기
  실행 (x) : 디렉터리로 이동하거나 디렉터리에서 프로그램을 실행하기 또는 파일의 메타 정보 보기
 - 디렉터리를 자유롭게 사용하려면 읽기/쓰기/실행 권한을 모두 가져야 함
  적어도 읽기와 실행 권한을 가지고 있어야 해당 디렉터리로 이동하거나 해당 디렉터리에서 ls -l 명령 수행 가능

 chmod 명령
 - 파일 소유자가 파일의 접근권한을변경하는 명령
 - chmod [options] mode files
  -R 옵션을 디렉터리에 적용하면 포함된 모든 파일과 서브디렉토리까지 권한 변경
 - 8진수 모드
  읽기(r) 은 4, 쓰기(w)는 2, 실행(x) 는1
  예 : rwxr-xr-x -> 111101101 -> 755
  chmod -R755 dir1
 - 기호 모드
  형식은 [ugoa][+-=][rwx]
  ugoa는 각각 user group other all 의미하며 생략하며 all
  +-=는 각각 권한의 추가 제거 지정을 의미
  chmod u+x file1
  chmod u=rwx,g=rx,o=x file2

 umask 명령
 - 파일이나 디렉터리의 접근권한의 기본값을 출력하거나 설정하는 명령
  보통 /etc/bashrc에 설정되어 있음
 - umask [-S][mask]
  단순히 umask (또는 umask -S) 명령을 실행하면 현재 기본값을 알 수 있음
  -S 옵션은 기호 모드로 결과를 보여줌
  umask 002
   마스크 값이 002라는 건 기타 사용자에게 쓰기권한을 부여하지 않는다는 것
   디렉터리에 775라는 접근권한을 주는 것
   파일의 경우 실행권한은 부여되지 않으며 접근권한은 664가 됨
  참고로 touch file 명령은 파일의 접근/수정 시간을 현재 시간으로 변경하며 파일이 존재하지 않으면 파일 생성

 chown 명령 (change owner)
 - root 사용자가 파일이나 디렉터리 소유자 또는 소유그룹을 변경하는 명령
  파일 또는 디렉터리의 소유자는 파일 생성한 사용자로 소유그룹

 ln 명령
 - 파일을 다른 이름으로 연결하는 명령
 - ln [options] 원본파일명 [대상파일명]
  기본적으로 하드 링크를 만들며 -s옵션을 사용하면 심벌릭 링크 만들어짐
 - 하드 링크
  하나의 파일에 다른 이름을 부여하는 것
  원본 파일의 링크 카운트가 증가
  다른 파일 시스템에는 링크할 수 없음. 디렉터리에도 만들 수 없음
 - 심벌릭 링크
  윈도우의 바로가기와 같은 역할의 독립적 파일
  다른 파일 시스템에 심벌릭 링크 만들수 있음
  원본 삭제하면 심벌릭 링크 사라짐
  디렉터리의 경우 심벌릭 링크만 만들 수 있음

3. 파일의 내용 확인
 more 명령
 - 파일의 내용을 화면 단위로 출력하는 명령
  한 화면을 보여주고 일단 멈춤
 - more [options] files

 less 명령
 - more 명령의 개선된 버전
 - 위 또 아래로 스크롤 할 수 있음
 - 다양한 내부 명령 있음

 head 명령
 - 파일의 맨 앞 부분을 출력하는 명령(기본은10라인)
 - head [options] [files]
  옵션 -n 숫자 또는 -숫자로 보고싶은 라인 수 변경 가능

 tail 명령
 - 파일의 마지막 부분을 출력하는 명령
 - tail [options] [files]
 - f 옵션을 사용하면 변화하는 파일의 내용을 계속 감시할 수 있음

 cat 명령 (concatenate)
 - 하나의 파일 또는 여러 파일을 연결시켜 화면에 출력
 - cat [options] [files]