학습개요
vi 편집기가 제공하는 다양한 편집 기능을 사용하여 텍스트 파일을 편집하는 방법을 학습한다.
또 파일의 이름이나 속성으로 파일을 찾거나 파일에서 특정 문자열을 포함하는 라인을 찾는 셸 명령을 학습한다.

학습목표
vi 편집기의 커서 이동, 편집, 복사 및 붙여넣기 방법을 설명할 수 있다.
vi 편집기의 라인 모드에서 검색과 대치 명령을 사용할 수 있다.
파일을 찾거나 문자열을 검색하는 방법을 설명할 수 있다.

정리하기
vi를 사용한 편집 작업은 명령 모드, 입력 모드, 라인 모드의 세 가지 모드로 구분된다.
명령 모드에서 커서 이동, 텍스트의 삭제, 텍스트의 변경, 텍스트의 복사와 붙여넣기를 위한 명령 키가 존재한다.
라인 모드에서 ‘검색과 대치’를 위한 다양한 기능을 수행할 수 있다.
파일 이름의 일부를 알고 있을 때 locate 명령으로 파일을 찾을 수 있다.
파일이 가진 속성으로 파일을 찾고 검색된 파일을 대상으로 특별한 액션을 수행할 때 find 명령을 사용한다.

1. 편집기
 리눅스와 텍스트 파일
 - 리눅스 시스템에서 중요한 설정 정보나 셸 스크립트가 텍스트 파일로 존재함
 - 텍스트 파일의 장점
  시스템 간 공유가 쉽고 텍스트편집기를 이용하여 간단하게 편집 가능

 리눅스 텍스트 편집기의 종류
 - gedit
  GNOME 데스크톱에서 제공하는 작고 가벼운 편집기
 - emacs
  화면 단위 편집기로 다양한 기능을 제공하나 사용법 어려움
 - vi
  유닉스 계열 운영체제에서 가장 보편적인 화면 편집기
  vim 으로 알리아스 되어있음
  vim 과 vi의 차이
   형식이 있는 파일의 구문 구조를 표시하기 위해 컬러 사용
   마우스 지원, 다중 undo, 다중탑을 지원
   블록을 선택할 때 비주얼 모드를 지원

 vi 시작하기
 - 터미널 창의 셸 프롬프트에서 다음을 수행
  모달 편집기로 다른 작업은 수행할 수 없음
 - vi [options] [filename]
 - 예
  vi -R test.txt
  vi -c 'se nu' test.txt
  vi +10 test.txt

 vi 편집기와 세 가지 모드
 - 명령 모드
  커서 이동 삭제 복사 붙여넣기 등
  zz로 종료
 - 라인 모드
  저장 검색 대치 등
  q, q!, wq + enter로 종료
 - 입력 모드

 vi 종료하기
 - 명령 모드에서 키보드 명령을 입력
  ZZ : 변경 내용을 저장하고 종료
 - 라인 모드에서 종료
  :q                : 변경 내용이 없는 경우 종료
  :q!               : 저장하지 않고 강제 종료
  :wq [filename]    : 저장하고 종료, :w [filename] 또는 :w! [filename] 는 저장만 하는 명령
  :x [filename]     : 변경이 있었다면 저장하고 종료
  :x! [filename]    : 덮어쓰고 종료

2. vi로 편집하기
 텍스트 명령
 - 초기 명령 모드에서 입력 모드로 이동 후 입력 가능
 - 입력 모드일 때는 화면의 하단에 '--끼워넣기--'가 표시
 - 입력 모드에서 esc를 누르면 명령 모드로 돌아 감
 - 명령 키
  a 현재 커서 위치의 오른쪽부터 텍스트를 추가할 수 있음
  A 현재 라인의 끝에 텍스트를 추가 할 수 있음
  i 현재 커서의 위치부터 텍스트를 삽입 할 수 있음
  I 현재 라인의 처음에 텍스트를 삽입 할 수 있음
  o 현재 라인의 아래에 라인이 열리고 텍스트를 추가 할 수 있음
  O 현재 라인의 위에 라인이 열리고 텍스트를 추가 할 수 있음

 커서 이동 명령
 - 명령 모드에서 화살표 키와 페이지업,다운을 사용 가능
 - 그 외에도 다양한 키가 존재
 - 명령 키
  h j k l       방향키
  ctrl + f      페이지 업
  ctrl + b      페이지 다운
  w             다음 단어의 첫 자로 이동
  b             앞 단어의 첫 자로 이동
  O             현재 라인의 첫 칸으로 이동
  $             현재 라인의 마지막 칸으로 이동
  20G           20번째 라인으로 이동
  G             마지막 라인으로 이동
  5j            현재 라인에서 아래로 5라인 이동

 텍스트 삭제 명령
 - 명령 모드에서 텍스트를 삭제하거나 변경
  커서를 적당한 위치로 옮긴 후 삭제
 - 명령 키
  x         커서 위치의 한 문자 삭제
  dw        커서 위치부터 다음 단어 전까지 삭제
  d$ 또는 D  커서 위치부터 현재 라인의 끝까지 삭제
  dO        커서 왼쪽부터 현재 라인의 처음까지 삭제
  dd        현재 라인 삭제
  dG        현재 라인부터 파일의 끝까지 삭제
  d20G      현재 라인부터 라인번호 20까지 삭제
  3dw       커서 위치부터 세 단어 삭제 3 delete word
  5dd       현재 라인부터 5라인 삭제

 텍스트 변경 또는 치환 명령
 - 대개 일정 부분의 텍스트를 삭제하고 입력 모드로 전환됨
 - 삭제, 변경 또는 붙여넣기를 한 후 커서를 이동하고 도트(.) 명령을 수행하면 앞서 수행한 작업을 반복 할 수 있음
 - 명령 키
  r         커서 위치 한 문자를 대치
  R         커서 위치부터 계속 대치할 수 있음. 입력 모드로 전환됨(수정 모드)
  s 또는 cl  커서 위치의 문자가 삭제되고 입력 모드로 전환됨(삽입)
  S 또는 cc  현재 라인에 존재하는 문자가 삭제되고 현재 라인에서 입력 모드로 전환됨
  cw        커서 위치부터 단어의 끝까지 삭제되고 입력 모드로 전환됨
  cb        커서 왼쪽부터 단어의 앞까지 삭제되고 입력 모드로 전환됨
  c)        커서 위치부터 문장의 끝까지 삭제되고 입력 모드로 전환됨
  c}        커서 위치부터 문단의 끝까지 삭제되고 입력 모드로 전환됨

 텍스트 복사
 - 삭제나 변경을 위한 명령 키를 사용 할 때 텍스트가 복사됨
 - 또는 커서를 적당한 위치로 이동 후 y명령을 사용하여 복사

 텍스트 붙여넣기
 - P 또는 p명령을 이용하여 커서의 왼편/위 라인 또는 오른편/아래 라인에 붙여넣기를 할수 있음
 - 명령 키
  yy
  5yy
  yw
  y$
  y0
  y^
  yG
  y)
  y}

 블록 지정하기
 - v 또는 V명령을 사용하여 문자 또는 라인 단위로 지정
  블록을 지정하고 싶은 곳에 커서를 이동하고 화살표를 사용하여 블록을 지정하고 삭제(x) 또는 복사(y) 함
  커서를 이동한 후 p 또는 P명령을 사용하여 붙여넣기를 할 수 있음
 - 명령 키
  v 비주얼 모드에서 한번에 한 문자씩 선택
  V 비주얼 모드에서 한번에 한 라인씩 선택

 명령의 취소와 기타 명령
 - 명령 모드에서 다음과 같은 명령을 수행 할 수 있음
 - 명령 키
  u             이전 변경 작업 취소(undo)
  ctrl + r      undo 취소
  :e!           마지막으로 저장한 후의 작업을 취소하고 다시 작업
  :n            n번째 라인으로 이동
  J 또는 :j      현재 라인과 아래 라인을 합침
  :!command     vi를 사용하다 쉘 명령 command 수행
  :sh           vi를 잠시 빠져나가 쉘 명령 수행. 쉘 명령으로 exit를 실행하면 다시 vi로 돌아옴
  :se nu        화면 좌측에 라인번호 표시
  ctrl + g      화면 하단에 파일의 이름, 전체 라인 수, 현재 라인의 상대적 위치를 퍼센티지로 표시
  :r filename   지정된 파일의 내용을 읽어 현재 커서의 아래 줄에 추가

 검색 명령
 - 한 라인에서 검색할 때 명령 모드에서 f를 사용
  예를 들면 fa명령은 다음 위치부터 a를 찾음
  세미콜론으로 검색 반복
 - 파일 전체를 대상으로 검색할 때 다음 명령 사용
  /pattern          순방향으로 pattern을 검색하여 커서 이동
  /pattern/+num     pattern을 검색하고 그 뒤(+) num번째 라인으로 이동
  ?pattern          역방향으로 pattern을 검색하여 커서 이동
  ?pattern?-num     pattern을 검색하고 그 앞(-) num번째 라인으로 이동
  n                 이전 검색을 같은 방향으로 반복
  N                 이전 검색을 반대 방향으로 반복
 - 문자열을 검색할 때 정규식을 사용할 수 있음
  /hello        순방향으로 단어 hello를 검색하여 커서를 이동
  ?goodbye      역방향으로 단어 goodbye를 검색하여 커서 이동
  /The.*does    단어 The를 포함하고 그 후 단어 does를 포함하는 단어 검색 점은 임의의 한 문자와 매칭되며 애스터리스크(*)는 앞의 문자가 0개 이상이 나타날수있음을 의미
  ?[pP]rint     단어 print나 Print를 역방향으로 검색 [] 는 안의 포함하는 문자 중 하나와 매칭됨

 검색과 대치
 - 문자열을 검색하여 대치하는 기능
 - :[g][addresss]s/pattern/replacement[/option]
  [g][addresss]는 검색벙위로 %는 전체
  s는 pattern을 찾아 replacement로 대치하라는 연산
  마지막 옵션이 생략되면 검색된 라인에서 첫 번째 패턴만 대치하며 /g가 사용되면 모든 패턴을 대치
 - 명령 키 예
  :s/pattern/replacement        커서가 위치한 라인에서 첫번째 등장하는 pattern을 replacement로 대치
  :%s/pattern/replacement       전체 범위의 라인에서 위와 같은 것을 수행. % 대신 1,$를 넣어도 됨
  :%s/pattern/replacement/g     위와 같으나 등장하는 모든 pattern을 대치
  :1,10s/pattern/replacement    위와 같으나 1~10 라인에서 실행

3. 파일 찾기와 문자열 검색
 locate 명령
 - 문자열 패턴이(기본적으로/로 시작하는)파일 이름에 포함될 때 해당 파일의 이름을 출력하는 명령
  절대경로상의 디렉터리나 파일 이름에 문자열이 포함되면 출력
 - locate [options] pattern
  updatedb명령에서 만들어진 데이터베이스에서 검색
  접근불가능한 파일은 출력안됨
  옵션 -b(또는 --basename)를 사용하면 절대 경로 중 마지막 이름에서만 검색

 find 명령
 - 검색 위치에서 조건에 맞는 파일을 찾고 검색된 파일에 대해 명령 수행 가능
 - find [pathnames][expression]
  경로를 지정하지 않으면 현재 디렉터리(서브디렉터리 포함) 기준으로 함
  조건이나 액션이 주어지지 않으면 -print가 주어짐
 - 예
  단순히 find 명령을 수행하면 현재 디렉터리와 서브 디렉터리에 존재하는 모든 파일과 디렉터리의 이름을 라인 단위로 출력함
  find/etc -iname '*passwd*' 는 이름에 passwd를 포함하는 파일을 찾음
  find ~| wd -| 는 사용자가 가지고 있는 파일의 총 개수를 출력함

 find 명령에서 조건의 지정
 -cmin n            파일 또는 디렉터리 내용이나 파일 속성의 마지막 수정시간이 정확히 n분인 경우이며 n분보다 작음을 의미하려면 -n을 사용하고 n분보다 큼을 의미하려면 +n 사용
 -cnewer file
 -empty             파일 또는 디렉터리가 비어있음
 -name pattern      파일 또는 디렉터리의 이름이 pattern과 매치
 -iname pattern     위와 같으나 대소문자 구분하지 않음
 -nouser            파일 또는 디렉터리의 소유자가 유효한 사용자가 아닐 경우
 -perm mod
 -size n            사이즈로 검색
 -type c            파일 타입이 c인 경우
 -user name         파일 또는 디렉터리의 소유자가 name인 경우

 find 명령에서 사용되는 액션
 - 검색된 각 파일에 액션 수행 가능
 - 명령어
  -delete           파일 삭제
  -ls               파일 또는 디렉터리의 정보를 자세히 보여줌
  -print            경로를 포함하여 파일 이름을 화면에 출력 아무 액션도 주어지지 않으면 기본으로 수행
  -quit             매칭되는 것이 있다면 종료
  -exec command {}; 사용자 정의 액션으로 임의의 커맨드 수행 -exec 대신 -ok사용시 확인 과정 거침

 grep 명령
 - 파일에서 지정된 문자열 패턴을 포함한 라인을 찾아 출력
  파이프(|)를 사용하여 앞 명령의 결과(검색된 파일)을 입력으로 받아 검색할 때 grep을 자주 사용
 - grep [options] pattern [files]
  pattern은 찾으려는 문자열이며 정규식으로 표현 가능
 - 옵션
  -r 파일 대신 디렉터리가 지정될 때 포함된 모든 파일을 대상으로 검색
  -i 대소문자 구분X
  -v 매칭이 일어나지 않는 라인 출력
