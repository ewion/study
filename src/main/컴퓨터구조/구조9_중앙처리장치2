학습개요
이번 강의에서는 간단한 구조의 컴퓨터 설계에 대해 학습한다.
명령어 파이프라이닝에 대해 알아보고 CISC와 RISC에 대해 살펴본다.

학습목표
간단한 구조의 컴퓨터 설계를 통하여 중앙처리장치에 있어서 각 구성요소들의 역할을 이해한다.
명령어 파이프라이닝 방법을 통해 중앙처리장치의 수행속도 개선을 이해한다.
CISC와 RISC 구조의 비교를 통해 장, 단점을 이해한다.

 주요용어
명령어 파이프라이닝 : 컴퓨터에 있어서 파이프라인(pipeline)구조는 CPU의 처리속도를 향상시키기 위한 방법 중의 하나로서, CPU의 내부 하드웨어를 여러 단계로 나누어 처리하는 기술이다.
2 단계 명령어 파이프라인 : 명령어 수행 사이클을 명령어 인출 단계와 명령어 실행단계라는 두 개의 독립적인 파이프라인 모듈로 분리하여 수행하는 방법이다.
4 단계 명령어 파이프라인 : 명령어 수행 단계를 4단계, 즉 명령어 인출, 명령어 해독, 오퍼랜드인출, 실행 단계로 나누어 수행하는 방법이다.
6 단계 명령어 파이프라인 : 명령어 수행 단계를 6 단계, 즉 FI(Fetch Instruction)단계, DI(Decode Instruction)단계, CO(Calculate Operand)단계, FO(Fetch Operand)단계, EI(Execute Instruction)단계, WO(Write Operand) 단계로 나누어 수행하는 방법이다.
CISC(Complex Instruction Set Computer) : 복합 명령어를 포함하여 명령어와 주소지정방식의 수를 많이 사용하는 구조의 컴퓨터
RISC(Reduced Instruction Set Computer) : 복합 명령어는 사용하지 않고, 극히 간단한 명령어와 최소한의 주소지정방식을 사용하는 구조의 켬퓨터

1. 간단한 구조의 컴퓨터 설계
 설계 과정
 - 기본적 컴퓨터 구성요소 설계
 - 컴퓨터 명령어 설계
 - 명령어 분석을 통한 제어논리 설계
 - 하드웨어에 의한 제어장치 설계

 기본적인 컴퓨터 구성요소 설계

2. 명령어 파이프라인
 파이프라이닝
 - 어떤 일을 실행하는 데 있어 일을 여러단계로 나누어 중첩되게 실행함으로 성능을 높이는 방법

 명령어 파이프라이닝
 - CPU의 처리속도를 향상시키기 위한 방법 중 하나로서 CPU의 내부 하드웨어를 여러 단계로 나누어 처리하는 기술

3. CISC 와 RISC 비교
 명령어 세트의 복잡성에 따라
 CISC
 - 명령어에 따라 다양한 길이를 갖는 가변길이 명령어 형식 사용
 - 명령어 수행시간이 1클럭에서 많게는 수백클럭까지 소요된다
 - 약 200여개 이상의 명령어를 갖고 있다
 - 마이크로프로그램에 의한 제어방식
 RISC
 - 고정길이 명령어 형식을 사용하기 때문에 명령어 집합이 단순
 - 모든 명령어가 1워드 단위로 고정되어 있기 때문에 1개 명령어를 수행하는데 1개 클럭만이 소요된다
 - 약 30여개의 명령어만을 가지고 있다
 - 하드웨어에 의한 제어방식

 레지스터 구조에 따라
 CISC
 - CPU 내부의 범용레지스터의 수가 적다
 - 기억장치에 있는 데이터를 엑세스하기 위해서는 기억장치 접근이 자주 발생하며, 이는 컴퓨터의 성능저하 요인이 된다
 RISC
 - CPU 내부에 많은 수(32~200)의 범용 레지스터가 있다
 - 처리하고자 하는 데이터를 미리 CPU의 내부 레지스터로 가져와서 실행할 수 있으므로 처리속도의 향상을 도모할 수 있다

 파이프라인 적용 효율에 따라
 CISC
 - 명령어의 길이가 가변작이기 때문에 각 단계별 처리시간을 동일하게 해 주는것이 어려우므로 파이프라인 구조에서는 비효율적
 RISC
 - 명령어가 고정길이 명령어이기때문에 각 단계별 처리시간을 동일하게 해 주는것이 용이하므로 파이프라인 구조에 효율적