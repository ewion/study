학습개요
이번 강의에서는 캐시기억장치의 동작원리에 대해 살펴보고 가상기억장치의 개념과 동작원리 그리고 보조기억장치의 종류와 특징에 대해 학습한다.

학습목표
캐시기억장치의 여러 가지 사상방법에 대해 이해한다.
가상기억장치의 기억공간과 동작원리를 이해한다.
가상기억장치의 주소변환방법을 이해한다.
보조기억장치의 종류별 특징을 이해한다.

주요용어
블록(block) : 주기억장치 내에 연속적으로 저장된 일정한 수의 단어
희생 블록(victim block) : 캐시에 미스 되었을 때 접근하려는 데이터를 캐시에 가져오기 위하여 한 블록을 기억시킬 수 있을 공간을 확보해야 되는데 이때 확보된 공간을 의미한다.
블록 교환(block replacement) : 캐시에서 희생블록을 원래 주 기억장치의 저장되어 있던 곳에 다시 저장하고, 캐시의 희생블록이 저장되어 있던 곳에는 접근하려는 데이터가 포함되어 있는 주기억장치 블록을 저장시키는 것을 의미
히트(hit) : 접근하고자 하는 단어가 캐시기억장치에 저장되어있는 경우
미스(miss) : 접근하고자 하는 단어가 캐시기억장치에 저장되어 있지 않은 경우
직접 사상 : 중앙처리장치 주소를 Index필드와 Tag필드로 나누고 캐시 기억장치에서 이 두 필드가 모두 같은 데이터를 가져오는 방식
연관 사상 : 주기억장치의 주소와 데이터를 쌍으로 함께 캐시 기억장치에 저장하는 방식
집합-연관 사상 : 하나의 Index에 두 개 이상의 데이터를 저장시켜 집합을 만드는 방식
가상 주소(virtual address) : 가상기억장치 시스템에서 수행되는 프로그램의 명령어가 사용하는 주소
물리 주소(physical address) : 주기억장치에 접근하기 위해 실제 주기억장치에 적용하는 주소
페이지(page) : 가상주소공간과 주기억장치의 기억공간이 일정한 크기를 갖는 연속 된 공간으로 구분된 것
세그먼트(segment) : 가상주소공간과 주기억장치의 기억공간이 크기가 일정하지 않는 연속된 기억공간으로 구분된 것
페이징 방법 : 가상기억공간의 프로그램 블록과 실제 기억공간의 프로그램 블록의 크기를 페이지로 나누고, 이러한 페이지를 이용하는 주소변환방식
세그먼트 방법 : 프로그램의 논리적인 구조에 따라 페이지의 크기를 다양하게 나누 는 방법인 세그먼트기법을 이용하는 주소변환방식
순차접근 : 자료가 순차적으로 저장되기 때문에 원하는 자료에 접근하려면 처음에 들어있는 자료부터 순서적으로 데이터를 검색해나가는 방법
직접접근 : 파일내의 특정한 레코드를 검색할 때 처음부터 차례대로 접근하는 것이 아니라 직접 원하는 레코드에 접근할 수 있는 방법
SSD(Solid State Device) : 자기 디스크가 아닌 반도체 메모리를 내장한 보조기억장치로서, 하드 디스크보다 빠른 속도의 데이터 읽기, 쓰기가 가능
RAID 시스템 : 크기가 작고, 저가인 여러 개의 하드 디스크들을 묶어 하나의 기억 장치처럼 사용하는 시스템

1. 캐시기억장치의 사상방식
 사상(mapping)
 - 캐시기억장치와 주기억장치 사이에 데이터 이동
 - 중앙처리장치가 캐시기억장치에서 데이터를 가져오려 할 때
  원하는 데이터가 없을 경우 즉 미스가 일어나면 캐시기억장치의 일부분을 주기억장치로 보내고 주기억장치의 데이터를 캐시기억장치로 가져와야 하는 등의 데이터 이동 발생

 사상의 종류
 - 직접 (direct)
 - 연관 (associative)
 - 집합-연관 (set-associative)

 직접 사상
 - 중앙처리장치가 주기억장치를 참조할 때 중앙처리장치로부터 나온 주소를 Tag필드와 Index 필드로 나눈다
 - 데이터를 찾을 때 : 캐시기억장치에서 중앙처리장치 주소의 Index 필드와 같은 Index를 찾아 Tag까지 같다면 그 주소의 데이터를 가져간다
 - 만약 Index에 데이터가 없거나 또는 Index가 같으나 Tag가 다르면 주기억장치에서 데이터를 찾아 가져 오는 방식

 주기억장치와 캐시기억장치 사이의 주소관계의 예
2. 가상기억장치
3. 보조기억장치