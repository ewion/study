기본 연산회로 : 가, 감, 승, 제의 산술연산회로
인코더 : 부호화되지않은 입력을 받아서 부호화된 출력을 내보내는 부호화기
디코더 : 부호화된 입력을 받아서 부호화되지 않은 출력을 내보내는 복호화기
멀티플렉서 : 여러 개의 입력선 중에서 하나를 선택하여 단일의 출력을 내보내는 조합논리회로
디멀티플렉서 : 멀티플렉서와 반대되는 동작을 수행하는 조합논리회로
플립플롭 : 한 비트의 2진 정보를 저장할 수 있는 장치
레지스터 : 데이터를 일시 저장하거나 전송하는 장치
카운터 : 입력되는 클록 펄스의 적용에 따라 미리 정해진 순서를 밟아 가는 특수한 형태의 레지스터
컴퓨터 명령어 : 컴퓨터가 수행해야 하는 일을 나타내기 위한 비트들의 집합

1. 컴퓨터와 디지털논리회로
 디지털논리회로는 조합논리회로, 순서논리회로
 조합논리회로 : 현재의 입력에 의해서만 출력이 결정되는 논리회로
 순서논리회로 : 조합논리회로에 저장요소를 추가한 회로로서, 저장요소의 상태와 입력변수에 의해 출력이 결정됨.

 기본연산회로
  가감승제의 산술연산회로
  가산기 : 덧셈회로
  감산기 : 뺄셈회로
  승산기 : 곱셈회로
  제산기 : 나눗셈회로

 가산기
  덧셈회로
  2진수의 덧셈을 수행하는 조합논리회로
  반가산기 : 두비트의 덧셈을 수행, 두 비트를 더하고 올림수가 생겼는지 ㅊ체크
  전가산기 : 세비트의 덧셈을 수행,
  ex ) 10+5 = 2진수로 표현 1010 + 0101

 감산기
  반감산기 : 차가 무엇이고 빌림수가 있는지 따져봄
  반감산기와 반가산기의 논리도는 유사, not게이트의 유무로 있으면 감산기임

 가,감산기
  덧셈과 뺄샘을 수행할 수 있는 장치로, 가산기만으로 수행
  - 감산기는 가산기에 인버터를 추가한 형태
  - 가산기만 사용하여 감산을 수행하면 회로를 최소화

 MSI를 이용한 조합논리회로
  디지털 시스템에서
  - 효과적인 조합논리회로를 설계하기 위해서는 주어진 함수를 실현하는데 필요한 게이트의 수를 최소화할 필요
  - 이를 위해 집적회로 사용
  - 왜냐하면 패키지화된 IC의 내부게이트를 이용하면 경제적인 설계 가능
  이미 만들어진 MSI장치를 이용하면 다양한 조합논리회로의 설계 가능
  - MSI장치의 예 : 인코더, 디코더, 멀티플렉서, 디멀티플렉서, 멀티,디멀티플렉서는 CPU를구성하는 중요한 장치
  디코더와 멀티플렉서의 동작특성을 유념하면 CPU의 내부를 이해하는데 도움이됨

  인코더/디코더
   인코더
    부호화되지 않은 입력을 받아서 부호화된 출력을 내보내는 부호화기
    ex) 문자, 숫자, 기호등을 2진코드로 변환시켜주는 조합논리회로
    ex2) 'A' -> 65 -> 2진수 로 변환되는 과정을 인코더가 함
    인코더는 2^n개의 입력과 n개의 출력을 갖고 있으며, 출력은 입력값에 대응하는 2진 코드를 생성한다.

   디코더
    부호화된 입력을 받아서 부호화되지 않은 출력을 내보내는 복호화기
    ex) 기억장치에서 특정 번지를 선택할 때나 컴퓨터 명령어를 해독하는 데 사용되는 조합논리회로
    n비트의 2진코드를 최대 2^n개의 서로 다른 정보로 바꾸어 주는 조합논리회로
    ex2) 입력이 3개 들어오면 2^3개의 결과를 도출

  멀티플렉서
   여러개의 입력선 중 하나를 선택하여 단일의 출력을 내보내는 조합논리회로, 입력이 몇개던 출력은 하나
   특정 입력선을 선택하기 위해 선택변수를 사용 여러 입력 중하나를 선택하는 장치가 멀티플렉서
   즉 2^n개의 입력선 중에서 특정 입력선을 선택하기 위해서는 n개의 선택변수가 있어야 한다
   이 n개의 선택변수의 조합에 의해 특정 입력선이 선택
   데이터 선택기 라고도 하며 약어로 MUX로 표현

  디멀티플렉서
   데이터 분배기, 디코더와 유사함

 순서논리회로

 플립플롭 (F/F: Filp Flop)
  개요
   입력신호에 의해 상태를 바꾸도록 지시가 있을 때 까지 현재의 2진 상태를 유지하는 논리소자
   한 비트의 2진 정보를 저장 할 수 있는 장치
   클럭 신호에 의해 출력상태를 바꾼다

  플립플롭의 종류
   D플립플롭
   RS플립플롭
   JK플립플롭 : 가장 많이 사용
   T플립플롭 : JK를 변형시킨 상태

 레지스터
  FF로 만든 장치
  데이터를 일시 저장하거나 전송하는 장치
  여러개의 FF를 연결하여 구성 ex) 4개의 FF를 연결하면 4비트의 정보를 관리

  데이터 적재 레지스터
   입력된 데이터를 그대로 기억하는 역할을 수행하는 레지스터
   일반적으로 Dff를 사용

  시프트 레지스터
   레지스터가 기억하고 있는 정보에 대해 한 방향 또는 양방향으로 정보의 위치를 이동시킬 수 있는 레지스터
   ff를 직렬 연결

 카운터
  ff를 사용해 만든 순서논리회로
  입력되는 클록 펄스의 적용에 따라 미리 정해진 순서를 밟아가는 특수한 형태의 레지스터
  외부의 입출력이 없으며 상태변화는 클릭펄스에 의해 수행
  일반적으로 tff나 jkff가 사용된다

2. 컴퓨터 명령어

 컴퓨터 명령어의 개요
  디지털 시스템의 분석
  컴퓨터가 수행하는 일을 나타내기 위한 비트들의 집합
  일정한 형식을 가짐

  명령어 집합
  - 컴퓨터에서 사용할 수 있는 명령어의 세트
  - 모든 컴퓨터는 자신의 명령어 집합을 가지고 있음
  - 명령어 집합은 그 컴퓨터의 구조적인 특성을 나타내는 가장 중요한 정보
  - 동일 계열 컴퓨터는 같은 명령어 집합 사용
  - 따라서 명령어 집합을 이용하여 컴퓨터 시스템의 구조를 살펴 볼 수 있음

  명령어의 구성
   명령어는 필드라는 비트그룹으로 이루어지며 연산코드와 오퍼랜드 필드로 구성
   연산코드 필드 : 처리해야할 연산의 종류
   오퍼랜드 필드 : 처리할 대상 데이터 또는 데이터의 주소

  명령어의 수행 기능
  - 함수연산 기능
   덧셈 시프트 보수등 산술연산과 and or not등의 논리연산 수행 기능
  - 정보전달 기능
   레지스터들 사이의 정보전달 기능과 중앙처리장치와 주기억장치 사이의 정보전달
  - 순서제어 기능
   조건분기와 무조건 분기등을 통해 명령어의 수행순서를 제어
  - 입출력 기능
   주기억장치와 입출력장치 사이의 정보이동 기능

  명령어 형식
   명령어 형식
   - 명령어를 구성하는 필드들의 수와 배치방식 및 각 필드들의 비트 수를 말한다
   - 명령어는 컴퓨터의 내부구조에 따라 여러가지 형식이 있음
   명령어 형식의 분류
   - 오퍼랜드의 기억장소에 따른 명령어 형식
   - 오퍼랜드 수에 따른 명령어 형식

