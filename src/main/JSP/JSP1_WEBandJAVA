학습개요
많은 웹 응용 프로그램들이 자바 기반으로 개발되고 있다. 먼저 웹과 자바 기반 웹 서비스를 이해하는데 필요한 여러 용어의 의미를 확인한다.
이어서 동적 웹 서비스 제공을 위한 구성 요소와 웹 애플리케이션의 실행 방식을 알아보고, HTTP 프로토콜과 요청 및 응답 메시지에 관해 학습한다.

학습목표
웹 관련 용어를 나열하고 설명할 수 있다.
웹 애플리케이션의 실행 방식을 비교하여 설명할 수 있다.
JSP의 특징을 나열할 수 있다.
HTTP 프로토콜에 관해 설명할 수 있다.

정리하기
웹은 인터넷 상에 분산된 전 세계적 정보 공간 또는 정보 공유 서비스를 의미한다.
웹 클라이언트가 요청하는 웹 문서는 정적인 웹 문서와 동적인 웹 문서로 구분된다.
웹 애플리케이션은 실행 위치에 따라 서버 측/클라이언트 측 기술로 나뉘고, 구현 방식에 따라 컴파일/비컴파일 방식으로 구분된다.
JSP는 동적으로 웹 문서를 만들기 위한 서버 측 웹 프로그래밍 기술이다.
웹 애플리케이션 서버(WAS)는 동적으로 웹 페이지를 생성하기 위해 웹 애플리케이션을 실행하고 관리한다.
HTTP는 응용 계층의 프로토콜로서 웹 문서의 송수신을 위한 통신 규약이다.

1. 웹 관련 용어
 웹

 하이퍼텍스트
 - 웹상에 존재하는 문서형태로서 텍스트외에 이미지 동영상등의 멀티미디어 요소 포함
 - 하이퍼링크를 통해 다른 하이퍼텍스트와 연결
 - HTML로 표현됨
 - 웹브라우저로 하이퍼텍스트 볼수 있음

 웹 문서
 - 정적, 동적으로 나뉨
 - 정적 웹문서는 정적텍스트로 문서의내용이바뀌지않음, 항상 동일한 결과 도출
 - 동적 웹문서는 서버를 통해 값을 도출하여 사용자에 따라 다른 결과를 도출

2. 웹 애플리케이션의 실행과 구성요소
 웹 애플리케이션
 - 웹상에서 실행되는 응용 프로그램
 - 클라이언트측 실행과 서버측 실행, 컴파일방식 비컴파일 방식으로 나뉨

 웹 서비스 제공과 구성요소
 - 웹 클라이언트
  웹 브라우저는 서버에 요청을 보내고 응답 결과를 출력,
 - 웹 서버 (HTTP서버)
  클라이언트의 요청을 처리하도록 프로세스 관리
  요청을 처리한 결과를 클라이언트에 보냄
  HTTP 프로토콜을 사용하여 클라이언트와 통신함
 - 웹 애플리케이션 서버 (웹 컨테이너)
  웹 애플리케이션의 실행 환경
  JSP 페이지를 실행시키고 결과를 웹 서버에 전달
 - 데이터베이스

 웹 애플리케이션과 실행 위치
 - 클라이언트측 실행
  웹 문서에 동적 요소를 포함시켜 클라이언트에 전송
  웹브라우저가 해석하여 페이지 생성
  애플릿, javaScript, 플래시
  보안문제 있음
 - 서버측 실행
  서버에서 실행되어 응답 문서를 동적으로 생성
  웹 애플리케이션 서버가 수행한 결과가 브라우저에서 전송됨
  서블릿, JSP, ASP, PHP, CGI 방식
  서버에 부담 있음

 웹 애플리케이션의 구현 방식
 - 컴파일 방식
  컴파일 과정을 통해 실행 파일이나 바이트 코드가 만들어져 사용됨
  Java 서블릿, JSP
  Perl, C, C++ 을 이용한 CGI 방식
 - 비컴파일 방식
  매 요청마다 스크립트를 해석하여 실행하는 방식
  JavaScript 는 클라이언트에서 실행되는 스크립트 언어

 CGI
 - 동적 웹페이지를 생성하기 위한 방법 중 하나
 - 고급 언어프로그램을 실행시켜 HTML코드를 생성하고 전달
 - 초기에 많이 사용
 - 클라이언트의 요청이 잇으면 해당 프로그램을 실행시키기 위한 개별 프로세스 생성
 - 즉, 1요청 1프로세스 생성되며 서버에 부담을 많이 줌

 WAS
 - 웹애플리케이션을 실행하고 관리하는 별도의 전담 프로그램
 - 모든 요청에 대해 매번 프로세스를 생성하지 않고 하나의 자바 가상기계 내에서 수행
 - 요청을 수행하기 위햇 스레드 생성
 - API제공, 부하 균형, 고장 조치등 기능 수행

 웹 서버의 구체적 기능
 - 클라이언트가 요청한 웹문서를 전달
 - 클라이어언트 요청에 대한 기본적 사용자 인증 처리
 - 예외, 에러 처리 400, 500번대
 - 프로그램 실행 요청이 있으면 처리후 그 결과를 전달

 웹 애플리케이션 서버
 - 서버성능 개선을 위해 웹서버 기능 분리
 - 웹서비스 처리를 위해 동적페이지 만들거나 비즈니스 로직 처리

3. JSP 특징 및 개념
 서블릿
 - 서버+애플릿의 합성어
 - 웹페이지를 동적으로 생성하기 위한 자바측 클래스
 - 서버쪽에서 동작하는 자바프로그램을 서블릿
 - 자바 언어에 기초한 웹프로그램 개발 기술
 - 자바언어로 서블릿 클래스를 만들고, 컴파일된 바이트코드를 서버에 탑재하여 웹서비스 제공

 JSP
 - 서블릿 대신 사용할 수 있는 스크립트 형식의 언어, HTML페이지 내에 삽입됨
 - JSP 페이지는 서블릿으로 변환됨
 - 웹 애플리케이션 서버가 자동으로 JSP 페이지를 변환하고 컴파일하여 웹서비스를 제공함
 - JAVA EE를 구성하는 기술 중 하나

 JSP 특징
 - 스크립트 언어로 HTML페이지에 삽입
 - Java 언어의 특성 활용
 - 표현언어, 표현식, 액션태그등의 스크립트적 요소 제겅
 - 다양한 개발환경이 오픈소스로 제공
 - JSP 기술은 플랫폼에 독립적

 웹 컨테이너
 - 웹 컴포넌트를 저장하고 서블릿의 생명주기를 관리
 - 클라이언트의 서블릿 요청을 실행시키는 역할
 - 서블릿 컨테이너 라고도 함
 - Java로 구현된 서블릿 엔진
 - JSP를 서블릿으로 변환하는 기능 포함
 - Tomcat, WildFly, WebLogic, WebSphere, JBoss등

4. HTTP 프로토콜
 HTTP 프로토콜
 - 웹서버와 클라이언트 간 통신규약
 - TCP 프로토콜에 기초한 애플리케이션 계층 프로토콜
 - Connection oriented , Stateless 특성
  요청을 위해 접속해야함
  서버가 응답 후 서버는 클라이언트의 상태를 유지하지 않음
  서버의 상태와 관계 없이 요청을 보냄
  웹 서버의 부담이 줄어드나 상태관리를 위해 쿠키나 세션 필요
 - HTTP 요청과 응답 절차
  연결 설정, 요청메시지 전송, 응답 메시지 전송, 연결끊기

 HTTP 요청 메시지
 - 시작 라인
  요청 방식, URI, 버전 번호
 - 요청 헤더
  한 라인에 하나씩 헤더 정보를 기술
  GET요청시 헤더에 정보를 포함, URI에 노출되어 보안에 취약
  각 라인은 "헤더필드이름:값" 형식으로 구성됨
  요청헤더의 끝에 공백라인을 둠
 - 요청 메시지 몸체 (body)
  POST 요청 방식으로 전송할 때 사용되기 때문에 POST요청 에만 의미있음


개념 정리
웹 클라이언트
웹 컴포넌트
웹 애플리케이션 서버(웹 컨테이너, was)
웹 컨테이너
웹 서버

